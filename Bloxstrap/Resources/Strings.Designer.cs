//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bloxstrap.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Bloxstrap.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        public static string About_Licenses_Title {
            get {
                return ResourceManager.GetString("About.Licenses.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the people who&apos;ve supported Froststrap through Ko-fi. A massive thank you to everyone here!
        ///Every person here is ranked by their overall pledge..
        /// </summary>
        public static string About_Supporters_Description {
            get {
                return ResourceManager.GetString("About.Supporters.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly.
        /// </summary>
        public static string About_Supporters_Monthly {
            get {
                return ResourceManager.GetString("About.Supporters.Monthly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One-off.
        /// </summary>
        public static string About_Supporters_OneOff {
            get {
                return ResourceManager.GetString("About.Supporters.OneOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap supporters.
        /// </summary>
        public static string About_Supporters_Title {
            get {
                return ResourceManager.GetString("About.Supporters.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Froststrap.
        /// </summary>
        public static string About_Title {
            get {
                return ResourceManager.GetString("About.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All of Froststrap&apos;s translations are crowdsourced through [Crowdin]({0}). Everyone listed here are people who generously volunteered their time and effort to help localise Froststrap. A massive thank you to everyone here!.
        /// </summary>
        public static string About_Translators_Description {
            get {
                return ResourceManager.GetString("About.Translators.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translators.
        /// </summary>
        public static string About_Translators_Title {
            get {
                return ResourceManager.GetString("About.Translators.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server location could not be queried. You may be joining games too quickly..
        /// </summary>
        public static string ActivityWatcher_LocationQueryFailed {
            get {
                return ResourceManager.GetString("ActivityWatcher.LocationQueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your current game will not show on your Discord presence because an error occurred when loading the game information..
        /// </summary>
        public static string ActivityWatcher_RichPresenceLoadFailed {
            get {
                return ResourceManager.GetString("ActivityWatcher.RichPresenceLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox no longer supports Windows 7 or 8.1. To continue playing Roblox, please upgrade to Windows 10 or newer..
        /// </summary>
        public static string App_OSDeprecation_Win7_81 {
            get {
                return ResourceManager.GetString("App.OSDeprecation.Win7_81", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel you&apos;re currently on ({0}) has now been restricted from public use. You will now be on the default channel ({1})..
        /// </summary>
        public static string Boostrapper_Dialog_UnauthorizedChannel {
            get {
                return ResourceManager.GetString("Boostrapper.Dialog.UnauthorizedChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap was unable to automatically update to version {0}. Please update it manually by downloading and running it from the website..
        /// </summary>
        public static string Bootstrapper_AutoUpdateFailed {
            get {
                return ResourceManager.GetString("Bootstrapper.AutoUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is attempting to set your channel to {0}, however your current preferred channel is {1}.
        ///
        ///
        ///Would you like to switch your preferred channel to {0}?.
        /// </summary>
        public static string Bootstrapper_Bootstrapper_Dialog_PromptChannelChange {
            get {
                return ResourceManager.GetString("Bootstrapper.Bootstrapper.Dialog.PromptChannelChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is currently running, and launching another instance will close it. Are you sure you want to continue launching?.
        /// </summary>
        public static string Bootstrapper_ConfirmLaunch {
            get {
                return ResourceManager.GetString("Bootstrapper.ConfirmLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ansel is not supported.
        ///You can no longer use Bloxshade with Froststrap..
        /// </summary>
        public static string Bootstrapper_Dialog_AnselDisabled {
            get {
                return ResourceManager.GetString("Bootstrapper.Dialog.AnselDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel you&apos;re currently on ({0}) is out of date, and appears to no longer be receiving updates.\n
        ///Would you like to switch to the default channel ({1})?.
        /// </summary>
        public static string Bootstrapper_Dialog_ChannelOutOfDate {
            get {
                return ResourceManager.GetString("Bootstrapper.Dialog.ChannelOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrades were disabled with missing client.
        ///	To prevent issues upgrading will continue..
        /// </summary>
        public static string Bootstrapper_Dialog_NoUpgradeWithoutClient {
            get {
                return ResourceManager.GetString("Bootstrapper.Dialog.NoUpgradeWithoutClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some content may be missing. Force a Roblox reinstallation in settings to fix this..
        /// </summary>
        public static string Bootstrapper_ExtractionFailed_Message {
            get {
                return ResourceManager.GetString("Bootstrapper.ExtractionFailed.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to extract files.
        /// </summary>
        public static string Bootstrapper_ExtractionFailed_Title {
            get {
                return ResourceManager.GetString("Bootstrapper.ExtractionFailed.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap tried to upgrade Roblox but can&apos;t because Roblox&apos;s files are still in use.
        ///
        ///Please close any applications that may be using Roblox&apos;s files, and relaunch..
        /// </summary>
        public static string Bootstrapper_FilesInUse {
            get {
                return ResourceManager.GetString("Bootstrapper.FilesInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first install Froststrap before uninstalling..
        /// </summary>
        public static string Bootstrapper_FirstRunUninstall {
            get {
                return ResourceManager.GetString("Bootstrapper.FirstRunUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save {0}: {1}.
        /// </summary>
        public static string Bootstrapper_JsonManagerSaveFailed {
            get {
                return ResourceManager.GetString("Bootstrapper.JsonManagerSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all modifications will be present in the current launch..
        /// </summary>
        public static string Bootstrapper_ModificationsFailed_Message {
            get {
                return ResourceManager.GetString("Bootstrapper.ModificationsFailed.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to apply modifications.
        /// </summary>
        public static string Bootstrapper_ModificationsFailed_Title {
            get {
                return ResourceManager.GetString("Bootstrapper.ModificationsFailed.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap does not have enough disk space to download and install Roblox. Please free up some disk space and try again..
        /// </summary>
        public static string Bootstrapper_NotEnoughSpace {
            get {
                return ResourceManager.GetString("Bootstrapper.NotEnoughSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying Roblox modifications....
        /// </summary>
        public static string Bootstrapper_Status_ApplyingModifications {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.ApplyingModifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelling Roblox upgrade..
        /// </summary>
        public static string Bootstrapper_Status_CancelUpgrade {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.CancelUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring {product}....
        /// </summary>
        public static string Bootstrapper_Status_Configuring {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Configuring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to Roblox....
        /// </summary>
        public static string Bootstrapper_Status_Connecting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading.
        /// </summary>
        public static string Bootstrapper_Status_Downloading {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {product}....
        /// </summary>
        public static string Bootstrapper_Status_Installing {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing WebView2, please wait....
        /// </summary>
        public static string Bootstrapper_Status_InstallingWebView2 {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.InstallingWebView2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting {product}....
        /// </summary>
        public static string Bootstrapper_Status_Starting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading {product}....
        /// </summary>
        public static string Bootstrapper_Status_Upgrading {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Upgrading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting the latest Froststrap....
        /// </summary>
        public static string Bootstrapper_Status_UpgradingBloxstrap {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.UpgradingBloxstrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for other instances....
        /// </summary>
        public static string Bootstrapper_Status_WaitingOtherInstances {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.WaitingOtherInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style preview - Click the X button at the top right to close.
        /// </summary>
        public static string Bootstrapper_StylePreview_ImageCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.ImageCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style preview - Click Cancel to close.
        /// </summary>
        public static string Bootstrapper_StylePreview_TextCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.TextCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap has successfully uninstalled.
        /// </summary>
        public static string Bootstrapper_SuccessfullyUninstalled {
            get {
                return ResourceManager.GetString("Bootstrapper.SuccessfullyUninstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is currently running, but must be closed before uninstalling Froststrap. Would you like to close Roblox now?.
        /// </summary>
        public static string Bootstrapper_Uninstall_RobloxRunning {
            get {
                return ResourceManager.GetString("Bootstrapper.Uninstall.RobloxRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You currently do not have the WebView2 runtime installed. Some Roblox features will not work properly without it, such as the desktop app. Would you like to download it now?.
        /// </summary>
        public static string Bootstrapper_WebView2NotFound {
            get {
                return ResourceManager.GetString("Bootstrapper.WebView2NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox requires the use of Windows Media Foundation components. You appear to be missing them, likely because you are using an N edition of Windows. Please install them first, and then launch Roblox..
        /// </summary>
        public static string Bootstrapper_WMFNotFound {
            get {
                return ResourceManager.GetString("Bootstrapper.WMFNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add single.
        /// </summary>
        public static string Common_AddSingle {
            get {
                return ResourceManager.GetString("Common.AddSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analytics.
        /// </summary>
        public static string Common_Analytics {
            get {
                return ResourceManager.GetString("Common.Analytics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic.
        /// </summary>
        public static string Common_Automatic {
            get {
                return ResourceManager.GetString("Common.Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        public static string Common_Browse {
            get {
                return ResourceManager.GetString("Common.Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common.Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel.
        /// </summary>
        public static string Common_Channel {
            get {
                return ResourceManager.GetString("Common.Channel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Common_Close {
            get {
                return ResourceManager.GetString("Common.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy All.
        /// </summary>
        public static string Common_CopyAll {
            get {
                return ResourceManager.GetString("Common.CopyAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create New.
        /// </summary>
        public static string Common_CreateNew {
            get {
                return ResourceManager.GetString("Common.CreateNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string Common_Custom {
            get {
                return ResourceManager.GetString("Common.Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        public static string Common_Debug {
            get {
                return ResourceManager.GetString("Common.Debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug Menu.
        /// </summary>
        public static string Common_DebugMenu {
            get {
                return ResourceManager.GetString("Common.DebugMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Common_Default {
            get {
                return ResourceManager.GetString("Common.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Common_Delete {
            get {
                return ResourceManager.GetString("Common.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All.
        /// </summary>
        public static string Common_DeleteAll {
            get {
                return ResourceManager.GetString("Common.DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployment.
        /// </summary>
        public static string Common_Deployment {
            get {
                return ResourceManager.GetString("Common.Deployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord Rich Presence.
        /// </summary>
        public static string Common_DiscordRichPresence {
            get {
                return ResourceManager.GetString("Common.DiscordRichPresence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Common_Edit {
            get {
                return ResourceManager.GetString("Common.Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental.
        /// </summary>
        public static string Common_Experimental {
            get {
                return ResourceManager.GetString("Common.Experimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Common_Export {
            get {
                return ResourceManager.GetString("Common.Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast Flag Editor.
        /// </summary>
        public static string Common_FastFlags {
            get {
                return ResourceManager.GetString("Common_FastFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter Type:.
        /// </summary>
        public static string Common_FilterType {
            get {
                return ResourceManager.GetString("Common.FilterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string Common_Help {
            get {
                return ResourceManager.GetString("Common.Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Common_Import {
            get {
                return ResourceManager.GetString("Common.Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import from file.
        /// </summary>
        public static string Common_ImportFromFile {
            get {
                return ResourceManager.GetString("Common.ImportFromFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import JSON.
        /// </summary>
        public static string Common_ImportJson {
            get {
                return ResourceManager.GetString("Common.ImportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type: Launcher.
        /// </summary>
        public static string Common_LauncherType {
            get {
                return ResourceManager.GetString("Common.LauncherType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading, please wait....
        /// </summary>
        public static string Common_Loading {
            get {
                return ResourceManager.GetString("Common.Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        public static string Common_Message {
            get {
                return ResourceManager.GetString("Common.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miscellaneous.
        /// </summary>
        public static string Common_Miscellaneous {
            get {
                return ResourceManager.GetString("Common.Miscellaneous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type: Mod.
        /// </summary>
        public static string Common_ModType {
            get {
                return ResourceManager.GetString("Common.ModType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Common_Name {
            get {
                return ResourceManager.GetString("Common.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string Common_Navigation_Back {
            get {
                return ResourceManager.GetString("Common.Navigation.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Common_Navigation_Install {
            get {
                return ResourceManager.GetString("Common.Navigation.Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next.
        /// </summary>
        public static string Common_Navigation_Next {
            get {
                return ResourceManager.GetString("Common.Navigation.Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load data because of a network error..
        /// </summary>
        public static string Common_NetworkError {
            get {
                return ResourceManager.GetString("Common.NetworkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string Common_New {
            get {
                return ResourceManager.GetString("Common.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string Common_No {
            get {
                return ResourceManager.GetString("Common.No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not available.
        /// </summary>
        public static string Common_NotAvailable {
            get {
                return ResourceManager.GetString("Common.NotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string Common_OK {
            get {
                return ResourceManager.GetString("Common.OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Debug Menu.
        /// </summary>
        public static string Common_OpenDebugMenu {
            get {
                return ResourceManager.GetString("Common.OpenDebugMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open log file.
        /// </summary>
        public static string Common_OpenLogFile {
            get {
                return ResourceManager.GetString("Common.OpenLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset Flag Lists.
        /// </summary>
        public static string Common_PresetFlagLists {
            get {
                return ResourceManager.GetString("Common.PresetFlagLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presets.
        /// </summary>
        public static string Common_Presets {
            get {
                return ResourceManager.GetString("Common.Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiles.
        /// </summary>
        public static string Common_Profiles {
            get {
                return ResourceManager.GetString("Common.Profiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommended.
        /// </summary>
        public static string Common_Recommended {
            get {
                return ResourceManager.GetString("Common.Recommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename.
        /// </summary>
        public static string Common_Rename {
            get {
                return ResourceManager.GetString("Common.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Common_Reset {
            get {
                return ResourceManager.GetString("Common.Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox has not yet been installed. Please launch Roblox using Froststrap at least once before trying to use this option..
        /// </summary>
        public static string Common_RobloxNotInstalled {
            get {
                return ResourceManager.GetString("Common.RobloxNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox Studio.
        /// </summary>
        public static string Common_RobloxStudio {
            get {
                return ResourceManager.GetString("Common.RobloxStudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search By.
        /// </summary>
        public static string Common_SearchBy {
            get {
                return ResourceManager.GetString("Common.SearchBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Common_Settings {
            get {
                return ResourceManager.GetString("Common.Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcuts.
        /// </summary>
        public static string Common_Shortcuts {
            get {
                return ResourceManager.GetString("Common.Shortcuts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop icon.
        /// </summary>
        public static string Common_Shortcuts_Desktop {
            get {
                return ResourceManager.GetString("Common.Shortcuts.Desktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Menu icon.
        /// </summary>
        public static string Common_Shortcuts_StartMenu {
            get {
                return ResourceManager.GetString("Common.Shortcuts.StartMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Studio.
        /// </summary>
        public static string Common_Studio {
            get {
                return ResourceManager.GetString("Common.Studio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System default.
        /// </summary>
        public static string Common_SystemDefault {
            get {
                return ResourceManager.GetString("Common.SystemDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template.
        /// </summary>
        public static string Common_Template {
            get {
                return ResourceManager.GetString("Common.Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time.
        /// </summary>
        public static string Common_Time {
            get {
                return ResourceManager.GetString("Common.Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string Common_Type {
            get {
                return ResourceManager.GetString("Common.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Id.
        /// </summary>
        public static string Common_UserId {
            get {
                return ResourceManager.GetString("Common.UserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string Common_Username {
            get {
                return ResourceManager.GetString("Common.Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string Common_Value {
            get {
                return ResourceManager.GetString("Common.Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Common_Version {
            get {
                return ResourceManager.GetString("Common.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Guid.
        /// </summary>
        public static string Common_VersionGuid {
            get {
                return ResourceManager.GetString("Common.VersionGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string Common_Warning {
            get {
                return ResourceManager.GetString("Common.Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Common_Yes {
            get {
                return ResourceManager.GetString("Common.Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Roblox.
        /// </summary>
        public static string ContextMenu_CloseRoblox {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRoblox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to close Roblox? This will forcefully end the process..
        /// </summary>
        public static string ContextMenu_CloseRobloxMessage {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRobloxMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy invite deeplink.
        /// </summary>
        public static string ContextMenu_CopyDeeplinkInvite {
            get {
                return ResourceManager.GetString("ContextMenu.CopyDeeplinkInvite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game history is only recorded for your current Roblox session. Games will appear here as you leave them or teleport within them. Not all servers will be rejoinable..
        /// </summary>
        public static string ContextMenu_GameHistory_Description {
            get {
                return ResourceManager.GetString("ContextMenu.GameHistory.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rejoin.
        /// </summary>
        public static string ContextMenu_GameHistory_Rejoin {
            get {
                return ResourceManager.GetString("ContextMenu.GameHistory.Rejoin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game history.
        /// </summary>
        public static string ContextMenu_GameHistory_Title {
            get {
                return ResourceManager.GetString("ContextMenu.GameHistory.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs Menu.
        /// </summary>
        public static string ContextMenu_Logs_Title {
            get {
                return ResourceManager.GetString("ContextMenu.Logs.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays recently sent messages by players..
        /// </summary>
        public static string ContextMenu_MessageLogs_Description {
            get {
                return ResourceManager.GetString("ContextMenu.MessageLogs.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message logs.
        /// </summary>
        public static string ContextMenu_MessageLogs_Title {
            get {
                return ResourceManager.GetString("ContextMenu.MessageLogs.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player logs.
        /// </summary>
        public static string ContextMenu_PlayerLogs_Title {
            get {
                return ResourceManager.GetString("ContextMenu.PlayerLogs.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Instance ID.
        /// </summary>
        public static string ContextMenu_ServerInformation_CopyInstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.CopyInstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance ID.
        /// </summary>
        public static string ContextMenu_ServerInformation_InstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.InstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        public static string ContextMenu_ServerInformation_Location {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location: {0}
        ///Click for more information.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Text {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to private server.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Title_Private {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Title.Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to public server.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Title_Public {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Title.Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to reserved server.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Title_Reserved {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Title.Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server information.
        /// </summary>
        public static string ContextMenu_ServerInformation_Title {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string ContextMenu_ServerInformation_Type {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File must be a ZIP.
        /// </summary>
        public static string CustomTheme_Add_Errors_FileNotZip {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.FileNotZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be empty.
        /// </summary>
        public static string CustomTheme_Add_Errors_NameEmpty {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.NameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name contains illegal characters.
        /// </summary>
        public static string CustomTheme_Add_Errors_NameIllegalCharacters {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.NameIllegalCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be used.
        /// </summary>
        public static string CustomTheme_Add_Errors_NameReserved {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.NameReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name is already in use.
        /// </summary>
        public static string CustomTheme_Add_Errors_NameTaken {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.NameTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error.
        /// </summary>
        public static string CustomTheme_Add_Errors_Unknown {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid or corrupted ZIP file.
        /// </summary>
        public static string CustomTheme_Add_Errors_ZipInvalidData {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.ZipInvalidData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme file could not be found in the ZIP file.
        /// </summary>
        public static string CustomTheme_Add_Errors_ZipMissingThemeFile {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Errors.ZipMissingThemeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Custom Theme.
        /// </summary>
        public static string CustomTheme_Add_Title {
            get {
                return ResourceManager.GetString("CustomTheme.Add.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save changes to {0}?.
        /// </summary>
        public static string CustomTheme_Editor_ConfirmSave {
            get {
                return ResourceManager.GetString("CustomTheme.Editor.ConfirmSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Theme Directory.
        /// </summary>
        public static string CustomTheme_Editor_OpenThemeDirectory {
            get {
                return ResourceManager.GetString("CustomTheme.Editor.OpenThemeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview.
        /// </summary>
        public static string CustomTheme_Editor_Preview {
            get {
                return ResourceManager.GetString("CustomTheme.Editor.Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string CustomTheme_Editor_Save {
            get {
                return ResourceManager.GetString("CustomTheme.Editor.Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while saving your theme..
        /// </summary>
        public static string CustomTheme_Editor_Save_Error {
            get {
                return ResourceManager.GetString("CustomTheme.Editor.Save.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme successfully saved!.
        /// </summary>
        public static string CustomTheme_Editor_Save_Success {
            get {
                return ResourceManager.GetString("CustomTheme.Editor.Save.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editing &quot;{0}&quot;.
        /// </summary>
        public static string CustomTheme_Editor_Title {
            get {
                return ResourceManager.GetString("CustomTheme.Editor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom dialog has already been initialised.
        /// </summary>
        public static string CustomTheme_Errors_DialogAlreadyInitialised {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.DialogAlreadyInitialised", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1} uses blacklisted scheme {2}.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeBlacklistedUriScheme {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeBlacklistedUriScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has invalid {1}: {2}.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeConversionError {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeConversionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} is not a valid {2}.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeInvalidType {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element {0} is missing the {1} attribute.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeMissing {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1} is missing it&apos;s child.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeMissingChild {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeMissingChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1} can only have one child.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeMultipleChildren {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeMultipleChildren", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} can only have one {1} defined.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeMultipleDefinitions {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeMultipleDefinitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} must be larger than {2}.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeMustBeLargerThanMin {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeMustBeLargerThanMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} must be smaller than {2}.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeMustBeSmallerThanMax {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeMustBeSmallerThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1} could not be parsed into a {2}.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeParseError {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1} {2} is null.
        /// </summary>
        public static string CustomTheme_Errors_ElementAttributeParseErrorNull {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementAttributeParseErrorNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot have a child of {1}.
        /// </summary>
        public static string CustomTheme_Errors_ElementInvalidChild {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementInvalidChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} can only have one child.
        /// </summary>
        public static string CustomTheme_Errors_ElementMultipleChildren {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementMultipleChildren", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} failed to create {1}: {2}.
        /// </summary>
        public static string CustomTheme_Errors_ElementTypeCreationFailed {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.ElementTypeCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme XML root is not {0}.
        /// </summary>
        public static string CustomTheme_Errors_InvalidRoot {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.InvalidRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No custom theme selected.
        /// </summary>
        public static string CustomTheme_Errors_NoThemeSelected {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.NoThemeSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to setup custom bootstrapper: {0}.
        ///Defaulting to Fluent..
        /// </summary>
        public static string CustomTheme_Errors_SetupFailed {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.SetupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom bootstrappers can only have a maximum of {0} elements, got {1}..
        /// </summary>
        public static string CustomTheme_Errors_TooManyElements {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.TooManyElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown element {0}.
        /// </summary>
        public static string CustomTheme_Errors_UnknownElement {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.UnknownElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Unknown {1} {2}.
        /// </summary>
        public static string CustomTheme_Errors_UnknownEnumValue {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.UnknownEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} version is not a number.
        /// </summary>
        public static string CustomTheme_Errors_VersionNotNumber {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.VersionNotNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} version {1} is not recognised.
        /// </summary>
        public static string CustomTheme_Errors_VersionNotRecognised {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.VersionNotRecognised", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} version is not set.
        /// </summary>
        public static string CustomTheme_Errors_VersionNotSet {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.VersionNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} version {1} is no longer supported.
        /// </summary>
        public static string CustomTheme_Errors_VersionNotSupported {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.VersionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse the theme file: {0}.
        /// </summary>
        public static string CustomTheme_Errors_XMLParseFailed {
            get {
                return ResourceManager.GetString("CustomTheme.Errors.XMLParseFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Fast Flag.
        /// </summary>
        public static string Dialog_AddFastFlag_Title {
            get {
                return ResourceManager.GetString("Dialog.AddFastFlag.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait for installation to finish..
        /// </summary>
        public static string Dialog_AlreadyRunning_Installer {
            get {
                return ResourceManager.GetString("Dialog.AlreadyRunning.Installer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait for uninstallation to finish..
        /// </summary>
        public static string Dialog_AlreadyRunning_Uninstaller {
            get {
                return ResourceManager.GetString("Dialog.AlreadyRunning.Uninstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap no longer supports Bloxshade.
        ///For more information join Bloxshade discord server..
        /// </summary>
        public static string Dialog_Bloxshade_Setting {
            get {
                return ResourceManager.GetString("Dialog.Bloxshade.Setting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry.
        /// </summary>
        public static string Dialog_Bloxshade_ThankYou {
            get {
                return ResourceManager.GetString("Dialog.Bloxshade.ThankYou", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap was unable to create shortcuts for the Desktop and Start Menu. Try creating them later through the settings..
        /// </summary>
        public static string Dialog_CannotCreateShortcuts {
            get {
                return ResourceManager.GetString("Dialog.CannotCreateShortcuts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection could not be made, which likely indicates a poor internet connection or a firewall block. If your connection is fine, please ensure that your antivirus isn&apos;t blocking Froststrap..
        /// </summary>
        public static string Dialog_Connectivity_BadConnection {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.BadConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information:.
        /// </summary>
        public static string Dialog_Connectivity_MoreInfo {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string Dialog_Connectivity_Preventing {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.Preventing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox may be down right now. See {0} for more information..
        /// </summary>
        public static string Dialog_Connectivity_RobloxDown {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.RobloxDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Roblox needs to be installed or upgraded, Froststrap cannot continue..
        /// </summary>
        public static string Dialog_Connectivity_RobloxUpgradeNeeded {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.RobloxUpgradeNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For this launch, Roblox will not be checked for upgrades, and changes to mods will not be applied..
        /// </summary>
        public static string Dialog_Connectivity_RobloxUpgradeSkip {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.RobloxUpgradeSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string Dialog_Connectivity_TimedOut {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.TimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connectivity error.
        /// </summary>
        public static string Dialog_Connectivity_Title {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please try again later..
        /// </summary>
        public static string Dialog_Connectivity_TryAgainLater {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.TryAgainLater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap is unable to connect to {0}.
        /// </summary>
        public static string Dialog_Connectivity_UnableToConnect {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap is unable to download Roblox.
        /// </summary>
        public static string Dialog_Connectivity_UnableToDownload {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox cannot be downloaded at this time. Please read the following help page for more information: {0}.
        /// </summary>
        public static string Dialog_Connectivity_UnableToDownloadReason {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToDownloadReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy log contents.
        /// </summary>
        public static string Dialog_Exception_CopyLogContents {
            get {
                return ResourceManager.GetString("Dialog.Exception.CopyLogContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred while running Froststrap/Bloxstrap.
        /// </summary>
        public static string Dialog_Exception_Info_1 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the [Bloxstrap Wiki]({0}) first to see if this problem has already been addressed with a fix.
        ///
        ///If not, then please report this exception through a [GitHub issue]({1}) along with a copy of the log file that was created..
        /// </summary>
        public static string Dialog_Exception_Info_2 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the [Bloxstrap Wiki]({0}) first to see if this problem has already been addressed with a fix.
        ///
        ///If not, then please report this exception to the maintainers of this fork. Do NOT report this to Bloxstrap&apos;s GitHub issues, as this is an unoffical build..
        /// </summary>
        public static string Dialog_Exception_Info_2_Alt {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.2.Alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report exception.
        /// </summary>
        public static string Dialog_Exception_Report {
            get {
                return ResourceManager.GetString("Dialog.Exception.Report", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap Exception.
        /// </summary>
        public static string Dialog_Exception_Title {
            get {
                return ResourceManager.GetString("Dialog.Exception.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        public static string Dialog_Exception_Version {
            get {
                return ResourceManager.GetString("Dialog.Exception.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chosen bootstrapper icon could not be loaded.
        ///
        ///{0}.
        /// </summary>
        public static string Dialog_IconLoadFailed {
            get {
                return ResourceManager.GetString("Dialog.IconLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose preferred language.
        /// </summary>
        public static string Dialog_LanguageSelector_Header {
            get {
                return ResourceManager.GetString("Dialog.LanguageSelector.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a language before continuing with installation.
        ///Some text might not be translated to preferred language..
        /// </summary>
        public static string Dialog_LanguageSelector_Subtext {
            get {
                return ResourceManager.GetString("Dialog.LanguageSelector.Subtext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox has crashed..
        /// </summary>
        public static string Dialog_PlayerError_Crash {
            get {
                return ResourceManager.GetString("Dialog.PlayerError.Crash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox failed to launch..
        /// </summary>
        public static string Dialog_PlayerError_FailedLaunch {
            get {
                return ResourceManager.GetString("Dialog.PlayerError.FailedLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information about why this could be happening and how this can be resolved, please read [this help article]({0}).
        ///
        ///Check if Roblox works with [the original launcher]({1}). If it doesn&apos;t, then this isn&apos;t a Froststrap issue. If it does, then refer to the help article..
        /// </summary>
        public static string Dialog_PlayerError_HelpInformation {
            get {
                return ResourceManager.GetString("Dialog.PlayerError.HelpInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap is unable to write to the Windows Registry. An antivirus is likely interfering and causing issues. Please check to make sure there isn&apos;t anything that would restrict Froststrap&apos;s operation..
        /// </summary>
        public static string Dialog_RegistryWriteError {
            get {
                return ResourceManager.GetString("Dialog.RegistryWriteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string Enums_BootstrapperIcon_IconEarly2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconEarly2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Late 2015.
        /// </summary>
        public static string Enums_BootstrapperIcon_IconLate2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconLate2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fake Byfron (2023).
        /// </summary>
        public static string Enums_BootstrapperStyle_ByfronDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ByfronDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap (Classic).
        /// </summary>
        public static string Enums_BootstrapperStyle_ClassicFluentDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ClassicFluentDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string Enums_BootstrapperStyle_CustomDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.CustomDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap.
        /// </summary>
        public static string Enums_BootstrapperStyle_CustomFluentDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.CustomFluentDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap (Glass).
        /// </summary>
        public static string Enums_BootstrapperStyle_FluentAeroDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.FluentAeroDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap (Opaque).
        /// </summary>
        public static string Enums_BootstrapperStyle_FluentDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.FluentDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy (2008 - 2011).
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2008 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy (2011 - 2014).
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2011 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox (~2014).
        /// </summary>
        public static string Enums_BootstrapperStyle_ProgressDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ProgressDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vista (2008 - 2011).
        /// </summary>
        public static string Enums_BootstrapperStyle_VistaDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.VistaDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        public static string Enums_CleanerOptions_Never {
            get {
                return ResourceManager.GetString("Enums.CleanerOptions.Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After 1 day.
        /// </summary>
        public static string Enums_CleanerOptions_OneDay {
            get {
                return ResourceManager.GetString("Enums.CleanerOptions.OneDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After 1 month.
        /// </summary>
        public static string Enums_CleanerOptions_OneMonth {
            get {
                return ResourceManager.GetString("Enums.CleanerOptions.OneMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After 1 week.
        /// </summary>
        public static string Enums_CleanerOptions_OneWeek {
            get {
                return ResourceManager.GetString("Enums.CleanerOptions.OneWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After 2 months.
        /// </summary>
        public static string Enums_CleanerOptions_TwoMonths {
            get {
                return ResourceManager.GetString("Enums.CleanerOptions.TwoMonths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Enums_CopyFormatMode_Format1 {
            get {
                return ResourceManager.GetString("Enums.CopyFormatMode.Format1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommended.
        /// </summary>
        public static string Enums_CopyFormatMode_Format2 {
            get {
                return ResourceManager.GetString("Enums.CopyFormatMode.Format2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alphabetical.
        /// </summary>
        public static string Enums_CopyFormatMode_Format3 {
            get {
                return ResourceManager.GetString("Enums.CopyFormatMode.Format3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Descending by length.
        /// </summary>
        public static string Enums_CopyFormatMode_Format4 {
            get {
                return ResourceManager.GetString("Enums.CopyFormatMode.Format4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2006 (Cartoony).
        /// </summary>
        public static string Enums_CursorType_From2006 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2013 (Angular).
        /// </summary>
        public static string Enums_CursorType_From2013 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blank.
        /// </summary>
        public static string Enums_CustomThemeTemplate_Blank {
            get {
                return ResourceManager.GetString("Enums.CustomThemeTemplate.Blank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple.
        /// </summary>
        public static string Enums_CustomThemeTemplate_Simple {
            get {
                return ResourceManager.GetString("Enums.CustomThemeTemplate.Simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catmoji.
        /// </summary>
        public static string Enums_EmojiType_Catmoji {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Catmoji", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default (Twemoji).
        /// </summary>
        public static string Enums_EmojiType_Default {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 10.
        /// </summary>
        public static string Enums_EmojiType_Windows10 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 11.
        /// </summary>
        public static string Enums_EmojiType_Windows11 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 8.
        /// </summary>
        public static string Enums_EmojiType_Windows8 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2015 (V1).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2020 (V2).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2023 (V4).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V4 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2023 (V4 + New UI).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V4Chrome {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V4Chrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen by game.
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Future (Phase 3).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Future {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Future", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shadow Map (Phase 2).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_ShadowMap {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.ShadowMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voxel (Phase 1).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Voxel {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Voxel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct3D 10.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D10 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct3D 11.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D11 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenGL.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_OpenGL {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.OpenGL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vulkan.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_Vulkan {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.Vulkan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 0 (Lowest).
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level0 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 1.
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 2.
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 3 (Highest).
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level3 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private server.
        /// </summary>
        public static string Enums_ServerType_Private {
            get {
                return ResourceManager.GetString("Enums.ServerType.Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public server.
        /// </summary>
        public static string Enums_ServerType_Public {
            get {
                return ResourceManager.GetString("Enums.ServerType.Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved server.
        /// </summary>
        public static string Enums_ServerType_Reserved {
            get {
                return ResourceManager.GetString("Enums.ServerType.Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aqua.
        /// </summary>
        public static string Enums_Theme_Aqua {
            get {
                return ResourceManager.GetString("Enums.Theme.Aqua", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blue.
        /// </summary>
        public static string Enums_Theme_Blue {
            get {
                return ResourceManager.GetString("Enums.Theme.Blue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classic Dark.
        /// </summary>
        public static string Enums_Theme_ClassicDark {
            get {
                return ResourceManager.GetString("Enums.Theme.ClassicDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cotton Candy.
        /// </summary>
        public static string Enums_Theme_CottonCandy {
            get {
                return ResourceManager.GetString("Enums.Theme.CottonCandy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cyan.
        /// </summary>
        public static string Enums_Theme_Cyan {
            get {
                return ResourceManager.GetString("Enums.Theme.Cyan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        public static string Enums_Theme_Dark {
            get {
                return ResourceManager.GetString("Enums.Theme.Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forest.
        /// </summary>
        public static string Enums_Theme_Forest {
            get {
                return ResourceManager.GetString("Enums.Theme.Forest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap.
        /// </summary>
        public static string Enums_Theme_Froststrap {
            get {
                return ResourceManager.GetString("Enums.Theme.Froststrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Green.
        /// </summary>
        public static string Enums_Theme_Green {
            get {
                return ResourceManager.GetString("Enums.Theme.Green", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string Enums_Theme_Light {
            get {
                return ResourceManager.GetString("Enums.Theme.Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Midnight.
        /// </summary>
        public static string Enums_Theme_Midnight {
            get {
                return ResourceManager.GetString("Enums.Theme.Midnight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orange.
        /// </summary>
        public static string Enums_Theme_Orange {
            get {
                return ResourceManager.GetString("Enums.Theme.Orange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pink.
        /// </summary>
        public static string Enums_Theme_Pink {
            get {
                return ResourceManager.GetString("Enums.Theme.Pink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purple.
        /// </summary>
        public static string Enums_Theme_Purple {
            get {
                return ResourceManager.GetString("Enums.Theme.Purple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purple Moon.
        /// </summary>
        public static string Enums_Theme_PurpleMoon {
            get {
                return ResourceManager.GetString("Enums.Theme.PurpleMoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red.
        /// </summary>
        public static string Enums_Theme_Red {
            get {
                return ResourceManager.GetString("Enums.Theme.Red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red Blue.
        /// </summary>
        public static string Enums_Theme_RedBlue {
            get {
                return ResourceManager.GetString("Enums.Theme.RedBlue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yellow.
        /// </summary>
        public static string Enums_Theme_Yellow {
            get {
                return ResourceManager.GetString("Enums.Theme.Yellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON files.
        /// </summary>
        public static string FileTypes_JSONFiles {
            get {
                return ResourceManager.GetString("FileTypes.JSONFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip archive.
        /// </summary>
        public static string FileTypes_ZipArchive {
            get {
                return ResourceManager.GetString("FileTypes.ZipArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap has been upgraded to v{0}.
        /// </summary>
        public static string InstallChecker_Updated {
            get {
                return ResourceManager.GetString("InstallChecker.Updated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of Froststrap you&apos;ve launched is different to the version you currently have installed.
        ///Would you like to upgrade your currently installed version?.
        /// </summary>
        public static string InstallChecker_VersionDifferentThanInstalled {
            get {
                return ResourceManager.GetString("InstallChecker.VersionDifferentThanInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of Froststrap you&apos;ve launched is older than the version you currently have installed.
        ///Issues may occur and your settings may be altered. A reinstall is recommended.
        ///Are you sure you want to continue?.
        /// </summary>
        public static string InstallChecker_VersionLessThanInstalled {
            get {
                return ResourceManager.GetString("InstallChecker.VersionLessThanInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Roblox once everything has been installed and configured.
        /// </summary>
        public static string Installer_Completion_Launch_Description {
            get {
                return ResourceManager.GetString("Installer.Completion.Launch.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install And Launch Roblox.
        /// </summary>
        public static string Installer_Completion_Launch_Title {
            get {
                return ResourceManager.GetString("Installer.Completion.Launch.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View and tweak all of the features and settings Froststrap has to offer.
        /// </summary>
        public static string Installer_Completion_Settings_Description {
            get {
                return ResourceManager.GetString("Installer.Completion.Settings.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Froststrap&apos;s Settings.
        /// </summary>
        public static string Installer_Completion_Settings_Title {
            get {
                return ResourceManager.GetString("Installer.Completion.Settings.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap has successfully been installed.
        ///
        ///However, Roblox has not been installed yet. It will be installed when you launch Roblox with Froststrap for the first time. Before installation, you may want to configure Froststrap’s settings first.
        ///
        ///Important Note: Do not use the “Roblox Player” shortcut to launch Roblox, as Froststrap will be unable to launch Roblox due to conflicting issues. If you don’t see Froststrap initiating when launching from the Roblox website, simply launch Roblox with Froststrap [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Installer_Completion_Text {
            get {
                return ResourceManager.GetString("Installer.Completion.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completion.
        /// </summary>
        public static string Installer_Completion_Title {
            get {
                return ResourceManager.GetString("Installer.Completion.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to import Bloxstrap settings.
        ///
        ///{0}.
        /// </summary>
        public static string Installer_FailedToImportSettings {
            get {
                return ResourceManager.GetString("Installer.FailedToImportSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import settings from Bloxstrap.
        /// </summary>
        public static string Installer_ImportSettings {
            get {
                return ResourceManager.GetString("Installer.ImportSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap has been installed to this location before and is still present, however the installer cannot overwrite the old executable. 
        ///
        ///Please manually delete Froststrap.exe from the install location or try restarting your system, and then retry installation afterwards..
        /// </summary>
        public static string Installer_Install_CannotOverwrite {
            get {
                return ResourceManager.GetString("Installer.Install.CannotOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing data found. Your mods and settings will be restored..
        /// </summary>
        public static string Installer_Install_Location_DataFound {
            get {
                return ResourceManager.GetString("Installer.Install.Location.DataFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox will also be installed to this path. Change this if you prefer to install all your games to a separate drive. Otherwise, it&apos;s recommended that you keep this as it is..
        /// </summary>
        public static string Installer_Install_Location_Text {
            get {
                return ResourceManager.GetString("Installer.Install.Location.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose where to install to.
        /// </summary>
        public static string Installer_Install_Location_Title {
            get {
                return ResourceManager.GetString("Installer.Install.Location.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are general shortcuts that bring up a multi-choice launch Menu. Shortcuts for specific functions can be created later in the settings..
        /// </summary>
        public static string Installer_Install_Shortcuts_Description {
            get {
                return ResourceManager.GetString("Installer.Install.Shortcuts.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Installer_Install_Title {
            get {
                return ResourceManager.GetString("Installer.Install.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap installation was not found..
        /// </summary>
        public static string Installer_InstallationNotFound {
            get {
                return ResourceManager.GetString("Installer.InstallationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel the installation?.
        /// </summary>
        public static string Installer_ShouldCancel {
            get {
                return ResourceManager.GetString("Installer.ShouldCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap Installer.
        /// </summary>
        public static string Installer_Title {
            get {
                return ResourceManager.GetString("Installer.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thank you for downloading Froststrap. 
        ///
        ///The only official source to download Froststrap from is {0}, so please verify that you have downloaded it from the official source.
        ///
        ///This installation process will be quick and simple, and you will be able to configure all of Froststrap&apos;s settings after installation..
        /// </summary>
        public static string Installer_Welcome_MainText {
            get {
                return ResourceManager.GetString("Installer.Welcome.MainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please click &apos;Next&apos; to continue..
        /// </summary>
        public static string Installer_Welcome_NextToContinue {
            get {
                return ResourceManager.GetString("Installer.Welcome.NextToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome.
        /// </summary>
        public static string Installer_Welcome_Title {
            get {
                return ResourceManager.GetString("Installer.Welcome.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are trying to install version {0} of Froststrap, but the latest version available is {1}. Would you like to download it?.
        /// </summary>
        public static string Installer_Welcome_UpdateNotice {
            get {
                return ResourceManager.GetString("Installer.Welcome.UpdateNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Fast Flags could not be loaded. They have been reset to the default configuration..
        /// </summary>
        public static string JsonManager_FastFlagsLoadFailed {
            get {
                return ResourceManager.GetString("JsonManager.FastFlagsLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Settings could not be loaded. They have been reset to the default configuration..
        /// </summary>
        public static string JsonManager_SettingsLoadFailed {
            get {
                return ResourceManager.GetString("JsonManager.SettingsLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure settings.
        /// </summary>
        public static string LaunchMenu_ConfigureSettings {
            get {
                return ResourceManager.GetString("LaunchMenu.ConfigureSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Join our Discord server.
        /// </summary>
        public static string LaunchMenu_Discord {
            get {
                return ResourceManager.GetString("LaunchMenu.Discord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Roblox.
        /// </summary>
        public static string LaunchMenu_LaunchRoblox {
            get {
                return ResourceManager.GetString("LaunchMenu.LaunchRoblox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Roblox Studio.
        /// </summary>
        public static string LaunchMenu_LaunchRobloxStudio {
            get {
                return ResourceManager.GetString("LaunchMenu.LaunchRobloxStudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See the Wiki for help.
        /// </summary>
        public static string LaunchMenu_Wiki_Description {
            get {
                return ResourceManager.GetString("LaunchMenu.Wiki.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Having an issue?.
        /// </summary>
        public static string LaunchMenu_Wiki_Title {
            get {
                return ResourceManager.GetString("LaunchMenu.Wiki.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No log file will be written for this launch because Froststrap is unable to write to the folder at &apos;{0}&apos;.
        /// </summary>
        public static string Logger_NoWriteMode {
            get {
                return ResourceManager.GetString("Logger.NoWriteMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contributors.
        /// </summary>
        public static string Menu_About_Contributors {
            get {
                return ResourceManager.GetString("Menu.About.Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code.
        /// </summary>
        public static string Menu_About_Contributors_Code {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contributors.
        /// </summary>
        public static string Menu_About_Contributors_Contributors {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are all of the people who have made notable contributions to Froststrap and Bloxstrap, shaping them into what they are today..
        /// </summary>
        public static string Menu_About_Contributors_Description {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inspirations.
        /// </summary>
        public static string Menu_About_Contributors_Insipirations {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Insipirations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Fishstrap/Bloxstrap Fork..
        /// </summary>
        public static string Menu_About_Description {
            get {
                return ResourceManager.GetString("Menu.About.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord Server.
        /// </summary>
        public static string Menu_About_DiscordServer {
            get {
                return ResourceManager.GetString("Menu.About.DiscordServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub Repository.
        /// </summary>
        public static string Menu_About_GithubRepository {
            get {
                return ResourceManager.GetString("Menu.About.GithubRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help and Information.
        /// </summary>
        public static string Menu_About_HelpInformation {
            get {
                return ResourceManager.GetString("Menu.About.HelpInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        public static string Menu_About_Licenses {
            get {
                return ResourceManager.GetString("Menu.About.Licenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apache License 2.0.
        /// </summary>
        public static string Menu_About_Licenses_Apache {
            get {
                return ResourceManager.GetString("Menu.About.Licenses.Apache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BSD 2-Clause License.
        /// </summary>
        public static string Menu_About_Licenses_BSD2 {
            get {
                return ResourceManager.GetString("Menu.About.Licenses.BSD2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License.
        /// </summary>
        public static string Menu_About_Licenses_MIT {
            get {
                return ResourceManager.GetString("Menu.About.Licenses.MIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report an Issue.
        /// </summary>
        public static string Menu_About_ReportIssue {
            get {
                return ResourceManager.GetString("Menu.About.ReportIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string Menu_About_Title {
            get {
                return ResourceManager.GetString("Menu.About.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        public static string Menu_About_Version {
            get {
                return ResourceManager.GetString("Menu.About.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings saved. You can now close this window.
        /// </summary>
        public static string Menu_AdvancedSettings_SettingsSaved {
            get {
                return ResourceManager.GetString("Menu.AdvancedSettings.SettingsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        public static string Menu_AllFiles {
            get {
                return ResourceManager.GetString("Menu.AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please note that not all your changes will immediately apply until you close all currently open Roblox instances..
        /// </summary>
        public static string Menu_AlreadyRunning_Caption {
            get {
                return ResourceManager.GetString("Menu.AlreadyRunning.Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap is already running.
        /// </summary>
        public static string Menu_AlreadyRunning_Title {
            get {
                return ResourceManager.GetString("Menu.AlreadyRunning.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize Froststrap’s bootstrapper using a wide variety of options..
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper.
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change downloading string. {0} is package name, {1} is downloaded packages size and {2} is total size of packages..
        /// </summary>
        public static string Menu_Appearance_BootstrapperDownloading_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.BootstrapperDownloading.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper downloading status.
        /// </summary>
        public static string Menu_Appearance_BootstrapperDownloading_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.BootstrapperDownloading.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure other miscellaneous customisable bootstrapper options..
        /// </summary>
        public static string Menu_Appearance_Customisation_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customisation.
        /// </summary>
        public static string Menu_Appearance_Customisation_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a multi-size .ico file with sizes 16px to 128px. Set Icon as &apos;Custom&apos; to use it..
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Icon.
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text that shows as the title of the bootstrapper..
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete custom theme {0}: {1}.
        /// </summary>
        public static string Menu_Appearance_CustomThemes_DeleteFailed {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomThemes.DeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No custom theme selected..
        /// </summary>
        public static string Menu_Appearance_CustomThemes_NoneSelected {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomThemes.NoneSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to rename custom theme {0}: {1}.
        /// </summary>
        public static string Menu_Appearance_CustomThemes_RenameFailed {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomThemes.RenameFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how Froststrap should look..
        /// </summary>
        public static string Menu_Appearance_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize Froststrap’s theme to your liking! Make sure to check out our custom themes we have built in!.
        /// </summary>
        public static string Menu_Appearance_Global_Theme_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance_Global.Theme.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Theme.
        /// </summary>
        public static string Menu_Appearance_Global_Theme_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Global.Theme.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what icon Froststrap should use..
        /// </summary>
        public static string Menu_Appearance_Icon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon.
        /// </summary>
        public static string Menu_Appearance_Icon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A relaunch is required for changes to take effect. Some text might not be translated to preferred language..
        /// </summary>
        public static string Menu_Appearance_Language_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Language.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Menu_Appearance_Language_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Language.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a launch screen style. Note: Dark theme isn’t supported for Legacy or Vista.
        ///For more custom launchers, visit the official Bloxstrap Discord server..
        /// </summary>
        public static string Menu_Appearance_Launcher_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Launcher.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launcher.
        /// </summary>
        public static string Menu_Appearance_Launcher_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Launcher.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to change the order of the sections on the left side..
        /// </summary>
        public static string Menu_Appearance_MenuAdjustment_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.MenuAdjustment.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock Order.
        /// </summary>
        public static string Menu_Appearance_MenuAdjustment_LockOrder {
            get {
                return ResourceManager.GetString("Menu.Appearance.MenuAdjustment.LockOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Down.
        /// </summary>
        public static string Menu_Appearance_MenuAdjustment_MoveDown {
            get {
                return ResourceManager.GetString("Menu.Appearance.MenuAdjustment.MoveDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Up.
        /// </summary>
        public static string Menu_Appearance_MenuAdjustment_MoveUp {
            get {
                return ResourceManager.GetString("Menu.Appearance.MenuAdjustment.MoveUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset To Default.
        /// </summary>
        public static string Menu_Appearance_MenuAdjustment_ResetToDefault {
            get {
                return ResourceManager.GetString("Menu.Appearance.MenuAdjustment.ResetToDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Adjustment.
        /// </summary>
        public static string Menu_Appearance_MenuAdjustment_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.MenuAdjustment.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview.
        /// </summary>
        public static string Menu_Appearance_Preview {
            get {
                return ResourceManager.GetString("Menu.Appearance.Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appearance.
        /// </summary>
        public static string Menu_Appearance_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ansel support is required for shaders..
        /// </summary>
        public static string Menu_Behaviour_AnselBanner {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AnselBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap will automatically check and update itself when launching Roblox..
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically update Froststrap.
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel.
        /// </summary>
        public static string Menu_Behaviour_Channel_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent closures of your existing game when accidentally launching another Roblox Instance..
        /// </summary>
        public static string Menu_Behaviour_ConfirmLaunches_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ConfirmLaunches.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt to confirm when launching another Roblox instance.
        /// </summary>
        public static string Menu_Behaviour_ConfirmLaunches_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ConfirmLaunches.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure what Froststrap should do when launching Roblox..
        /// </summary>
        public static string Menu_Behaviour_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, it will disable all animations within the app. Requires app restart..
        /// </summary>
        public static string Menu_Behaviour_DisableAnimation_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.DisableAnimation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Animations.
        /// </summary>
        public static string Menu_Behaviour_DisableAnimation_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.DisableAnimation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables hardware acceleration on Frostrap only. Note: You must restart the application in order to see any effects..
        /// </summary>
        public static string Menu_Behaviour_DisableHardwareAcceleration_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.DisableHardwareAcceleration.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Hardware Acceleration.
        /// </summary>
        public static string Menu_Behaviour_DisableHardwareAcceleration_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.DisableHardwareAcceleration.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only applies to games launched from the Roblox website..
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxLanguage_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxLanguage.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow use of unsupported Roblox languages.
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxLanguage_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxLanguage.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox will be installed fresh on next launch..
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Roblox reinstallation.
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows for more than one Roblox instance to be opened simultaneously. May cause issues with desktop app..
        /// </summary>
        public static string Menu_Behaviour_MultiInstances_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.MultiInstances.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-instance launching.
        /// </summary>
        public static string Menu_Behaviour_MultiInstances_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.MultiInstances.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverts the Roblox taskbar icon to the monochrome logo used prior to April 2025. Note: This feature is not guaranteed to always work!”.
        /// </summary>
        public static string Menu_Behaviour_OldRobloxIcon_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.OldRobloxIcon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old Roblox Icon.
        /// </summary>
        public static string Menu_Behaviour_OldRobloxIcon_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.OldRobloxIcon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Renames Roblox to &quot;eurotrucks2&quot;. Requires [supported graphic card](https://www.nvidia.com/en-us/geforce/technologies/ansel/supported-gpus/).
        ///	This feature is required for shaders..
        /// </summary>
        public static string Menu_Behaviour_RenameToEurotrucks_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.RenameToEurotrucks.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ansel support.
        /// </summary>
        public static string Menu_Behaviour_RenameToEurotrucks_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.RenameToEurotrucks.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper.
        /// </summary>
        public static string Menu_Behaviour_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files older than the set amount will be deleted..
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_Age_Description {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.Age.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Deletion Schedule.
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_Age_Title {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.Age.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old downloads will be deleted..
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_Cache_Description {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.Cache.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache.
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_Cache_Title {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.Cache.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap logs will be deleted..
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_IncludeBloxstrap_Description {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.IncludeBloxstrap.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap logs.
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_IncludeBloxstrap_Title {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.IncludeBloxstrap.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old log files will be deleted..
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_Logs_Description {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.Logs.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs Menu.
        /// </summary>
        public static string Menu_Bootstrapper_Cleaner_Logs_Title {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.Cleaner.Logs.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap will remove old data to save storage space. Note: Feature originally made by Fishstrap..
        /// </summary>
        public static string Menu_Bootstrapper_CleanUp_Description {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.CleanUp.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap Cleaner.
        /// </summary>
        public static string Menu_Bootstrapper_CleanUp_Title {
            get {
                return ResourceManager.GetString("Menu.Bootstrapper.CleanUp.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change automatically.
        /// </summary>
        public static string Menu_Channel_ChangeAction_Automatic {
            get {
                return ResourceManager.GetString("Menu.Channel.ChangeAction.Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox or Froststrap may try to change your preferred channel..
        /// </summary>
        public static string Menu_Channel_ChangeAction_Description {
            get {
                return ResourceManager.GetString("Menu.Channel.ChangeAction.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never change.
        /// </summary>
        public static string Menu_Channel_ChangeAction_Ignore {
            get {
                return ResourceManager.GetString("Menu.Channel.ChangeAction.Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always prompt.
        /// </summary>
        public static string Menu_Channel_ChangeAction_Prompt {
            get {
                return ResourceManager.GetString("Menu.Channel.ChangeAction.Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic channel change action.
        /// </summary>
        public static string Menu_Channel_ChangeAction_Title {
            get {
                return ResourceManager.GetString("Menu.Channel.ChangeAction.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change deployment and installation settings for Roblox &amp; Froststrap..
        /// </summary>
        public static string Menu_Channel_Description {
            get {
                return ResourceManager.GetString("Menu.Channel.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox upgrades.
        /// </summary>
        public static string Menu_Channel_RobloxUpgrades {
            get {
                return ResourceManager.GetString("Menu.Channel.RobloxUpgrades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, Roblox client won&apos;t upgrade to newer versions..
        /// </summary>
        public static string Menu_Channel_RobloxUpgrades_Description {
            get {
                return ResourceManager.GetString("Menu.Channel.RobloxUpgrades.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching latest deploy info, please wait....
        /// </summary>
        public static string Menu_Channel_Switcher_Fetching {
            get {
                return ResourceManager.GetString("Menu.Channel.Switcher.Fetching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified channel either doesn&apos;t exist or is private.
        /// </summary>
        public static string Menu_Channel_Switcher_Unauthorized {
            get {
                return ResourceManager.GetString("Menu.Channel.Switcher.Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Froststrap to download version from specific hash. Please do not change if you have no idea what this does..
        /// </summary>
        public static string Menu_Channel_VersionHash_Desription {
            get {
                return ResourceManager.GetString("Menu.Channel.VersionHash.Desription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version hash.
        /// </summary>
        public static string Menu_Channel_VersionHash_Title {
            get {
                return ResourceManager.GetString("Menu.Channel.VersionHash.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the deployment channel. Do not change unless you what you’re doing!.
        /// </summary>
        public static string Menu_ChannelChanger_Description {
            get {
                return ResourceManager.GetString("Menu.ChannelChanger.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please restart the app for the animations to disable..
        /// </summary>
        public static string Menu_Channels_DisableAnimationRestart {
            get {
                return ResourceManager.GetString("Menu.Channels.DisableAnimationRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please restart the app for hardware acceleration to disable and take effect..
        /// </summary>
        public static string Menu_Channels_HardwareAccelRestart {
            get {
                return ResourceManager.GetString("Menu.Channels.HardwareAccelRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player logs.
        /// </summary>
        public static string Menu_Context_PlayerLogs {
            get {
                return ResourceManager.GetString("Menu.Context.PlayerLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows players leaving/joining server you&apos;re in..
        /// </summary>
        public static string Menu_Context_PlayerLogs_Description {
            get {
                return ResourceManager.GetString("Menu.Context.PlayerLogs.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to install custom mods from the Bootstrapper..
        /// </summary>
        public static string Menu_CustomMods_Description {
            get {
                return ResourceManager.GetString("Menu.CustomMods.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Mods.
        /// </summary>
        public static string Menu_CustomMods_Title {
            get {
                return ResourceManager.GetString("Menu.CustomMods.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Logs.
        /// </summary>
        public static string Menu_DebugMenu_ClearLogs {
            get {
                return ResourceManager.GetString("Menu.DebugMenu.ClearLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Selected.
        /// </summary>
        public static string Menu_DebugMenu_CopySelected {
            get {
                return ResourceManager.GetString("Menu.DebugMenu.CopySelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Logs.
        /// </summary>
        public static string Menu_DebugMenu_ExportLogs {
            get {
                return ResourceManager.GetString("Menu.DebugMenu.ExportLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Logs Folder.
        /// </summary>
        public static string Menu_DebugMenu_OpenLogsFolder {
            get {
                return ResourceManager.GetString("Menu.DebugMenu.OpenLogsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh Logs.
        /// </summary>
        public static string Menu_DebugMenu_RefreshLogs {
            get {
                return ResourceManager.GetString("Menu.DebugMenu.RefreshLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search Logs.
        /// </summary>
        public static string Menu_DebugMenu_SearchBoxPlaceHolder {
            get {
                return ResourceManager.GetString("Menu.DebugMenu.SearchBoxPlaceHolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This channel is out of date, and is likely no longer being updated. Please use another channel..
        /// </summary>
        public static string Menu_Deployment_Channel_OutOfDate {
            get {
                return ResourceManager.GetString("Menu.Deployment.Channel.OutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new.
        /// </summary>
        public static string Menu_FastFlagEditor_AddNew {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AddNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Settings.
        /// </summary>
        public static string Menu_FastFlagEditor_AdvancedSettings {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AdvancedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import ID JSON.
        /// </summary>
        public static string Menu_FastFlagEditor_AdvancedSettings_ImportAddID {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AdvancedSettings.ImportAddID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add with ID.
        /// </summary>
        public static string Menu_FastFlagEditor_AdvancedSettings_SingleAddID {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AdvancedSettings.SingleAddID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An entry for this flag name already exists..
        /// </summary>
        public static string Menu_FastFlagEditor_AlreadyExists {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string Menu_FastFlagEditor_Back {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Misusing this can lead to instability or unexpected things happening..
        /// </summary>
        public static string Menu_FastFlagEditor_BannerText {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.BannerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use with caution..
        /// </summary>
        public static string Menu_FastFlagEditor_BannerTitle {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.BannerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of the flags you are attempting to import already have set values. Would you like to overwrite their current values with the ones defined in the import?
        ///
        ///There are {0} conflicting flag definitions:
        ///{1}.
        /// </summary>
        public static string Menu_FastFlagEditor_ConflictingImport {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ConflictingImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete selected.
        /// </summary>
        public static string Menu_FastFlagEditor_DeleteSelected {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.DeleteSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your FastFlags here. Check out more features in Advanced Settings.
        /// </summary>
        public static string Menu_FastFlagEditor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export JSON.
        /// </summary>
        public static string Menu_FastFlagEditor_ExportJson {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ExportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to include preset FFlags?.
        /// </summary>
        public static string Menu_FastFlagEditor_ExportJson_IncludePresets {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ExportJson.IncludePresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the value must be a boolean (either &apos;True&apos; or &apos;False&apos;).
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidBoolValue {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidBoolValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the name can only contain letters, numbers, and underscores.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidCharacter {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The JSON you&apos;ve entered does not appear to be valid. Please double check it and try again.
        ///
        ///More information:
        ///{0}.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidJSON {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidJSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the value must be a number.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidNumberValue {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidNumberValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the place filter is not formatted correctly..
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidPlaceFilter {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidPlaceFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the name must start with FFlag, DFInt, etc.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidPrefix {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copied to clipboard..
        /// </summary>
        public static string Menu_FastFlagEditor_JsonCopiedToClipboard {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.JsonCopiedToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You appear to be importing a very large configuration. You should only be importing configurations that you fully understand. Do NOT blindly paste in configurations made by other people. If you continue, you will very likely end up with stability issues and encounter unexpected changes.
        ///
        ///Are you sure you want to continue?.
        /// </summary>
        public static string Menu_FastFlagEditor_LargeConfig {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.LargeConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag Profiles.
        /// </summary>
        public static string Menu_FastFlagEditor_ProfilesDescription {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ProfilesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        public static string Menu_FastFlagEditor_Search {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show preset flags.
        /// </summary>
        public static string Menu_FastFlagEditor_ShowPresetFlags {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ShowPresetFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FastFlag Editor.
        /// </summary>
        public static string Menu_FastFlagEditor_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go back.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Back {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I know what I&apos;m doing.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Continue {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you know what you are doing?.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Header {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast Flags are extremely powerful, being that they are intended to only be used by Roblox engineers. While they can be very useful, manually configuring them can cause serious issues with stability and functionality. Do NOT use the editor if you are unsure of what you are doing.
        ///
        ///Do NOT use this to import large &quot;flag lists&quot; made by other people that promise to improve performance or such. They are subject to the aforementioned issues, and they will cause problems for you since you will not be fully aware  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Text {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save current flags.
        /// </summary>
        public static string Menu_FastFlagProfiles_Save {
            get {
                return ResourceManager.GetString("Menu_FastFlagProfiles_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Going above 240 FPS is not recommended, as this change may cause issues and worsen performance.
        ///
        ///[Click to learn more]({0}).
        /// </summary>
        public static string Menu_FastFlags_240FPSWarning {
            get {
                return ResourceManager.GetString("Menu.FastFlags.240FPSWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control how specific Roblox engine parameters and features are configured..
        /// </summary>
        public static string Menu_FastFlags_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your own Fast Flags. Use with caution..
        /// </summary>
        public static string Menu_FastFlags_Editor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Editor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about Fast Flags, what these presets do, and how to use them..
        /// </summary>
        public static string Menu_FastFlags_Help_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabling this will prevent anything configured here from being applied to Roblox..
        /// </summary>
        public static string Menu_FastFlags_ManagerEnabled_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.ManagerEnabled.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Froststrap to manage FastFlags.
        /// </summary>
        public static string Menu_FastFlags_ManagerEnabled_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.ManagerEnabled.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to May potentially improve performance on low-end devices only..
        /// </summary>
        public static string Menu_FastFlags_Presets_AndroidVfs_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.AndroidVfs.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low-End Hardware Optimization.
        /// </summary>
        public static string Menu_FastFlags_Presets_AndroidVfs_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.AndroidVfs.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are very basic fflags. Self explanatory..
        /// </summary>
        public static string Menu_FastFlags_Presets_BasicFFlags_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BasicFFlags.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic FastFlags.
        /// </summary>
        public static string Menu_FastFlags_Presets_BasicFFlags_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BasicFFlags.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Makes roblox packet sending as soon as possible. Note: Could lower ping potentially..
        /// </summary>
        public static string Menu_FastFlags_Presets_BetterPacketSending_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BetterPacketSending.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Better Packet Sending.
        /// </summary>
        public static string Menu_FastFlags_Presets_BetterPacketSending_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BetterPacketSending.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the skybox to black. Note: Certain icons or images will appear distorted due to Texture Skipping..
        /// </summary>
        public static string Menu_FastFlags_Presets_BlackSky_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BlackSky.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Black Sky.
        /// </summary>
        public static string Menu_FastFlags_Presets_BlackSky_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BlackSky.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how much data is temporarily stored before being processed or sent..
        /// </summary>
        public static string Menu_FastFlags_Presets_BufferArray_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BufferArray.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer Array Length.
        /// </summary>
        public static string Menu_FastFlags_Presets_BufferArray_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BufferArray.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overrides the Vulkan GPU support checks to allow unsupported hardware to run on the Vulkan API. Note: This setting may be highly unstable and can cause severe rendering issues!.
        /// </summary>
        public static string Menu_FastFlags_Presets_BypassVulkan_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BypassVulkan.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bypass Vulkan.
        /// </summary>
        public static string Menu_FastFlags_Presets_BypassVulkan_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.BypassVulkan.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox Menu.
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_IngameMenu {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.IngameMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debloat the in-game Roblox menu. Note: Keep disabled to remove..
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_IngameMenu_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.IngameMenu.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure network settings to potentially improve performance..
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_Network_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.Network.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_Network_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.Network.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rendering and Graphics.
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_Rendering {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.Rendering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure settings that change how your PC behaves with Roblox..
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_System_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.System.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System.
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_System_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.System.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Experimental settings that change how your PC behaves with Roblox..
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_SystemExperimental_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.SystemExperimental.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the appearance and arrangement of Roblox’s UI..
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_UserInterface_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.UserInterface.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Interface and Layout.
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_UserInterface_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.UserInterface.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled Roblox will use old top bar..
        /// </summary>
        public static string Menu_FastFlags_Presets_Chromeui_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Chromeui.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chrome UI.
        /// </summary>
        public static string Menu_FastFlags_Presets_Chromeui_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Chromeui.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the world&apos;s chunks in a similar way to Minecraft..
        /// </summary>
        public static string Menu_FastFlags_Presets_Chunks_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Chunks.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Chunks.
        /// </summary>
        public static string Menu_FastFlags_Presets_Chunks_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Chunks.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure visual and performance settings for Roblox’s engine..
        /// </summary>
        public static string Menu_FastFlags_Presets_D3DExclusiveFullscreenInfo {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.D3DExclusiveFullscreenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Roblox Built-In Ads.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableAds_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableAds.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Ads.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableAds_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableAds.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Clouds.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableClouds_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableClouds.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes Roblox’s layered clothing system from rendering on avatars. Note: Enabling this setting potentially may lead to improved performance..
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableLayeredClothing_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableLayeredClothing.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Layered Clothing.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableLayeredClothing_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableLayeredClothing.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable player shadows.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisablePlayerShadows_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisablePlayerShadows.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable post-processing effects.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisablePostFX_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisablePostFX.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable terrain textures.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableTerrainTextures_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableTerrainTextures.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: This setting disables a large majority of Roblox’s voice chat telemetry, but not all..
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableVoiceChatTelemetry_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableVoiceChatTelemetry.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Voice Chat Telemetry.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableVoiceChatTelemetry_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableVoiceChatTelemetry.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the pixel resolution in a game. This setting is similar to adjusting video quality on YouTube..
        /// </summary>
        public static string Menu_FastFlags_Presets_DynamicReso_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DynamicReso.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pixel Resolution.
        /// </summary>
        public static string Menu_FastFlags_Presets_DynamicReso_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DynamicReso.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred escape Menu version.
        /// </summary>
        public static string Menu_FastFlags_Presets_EscapeMenuVersion_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.EscapeMenuVersion.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decreases wait time by optimizing loading speeds..
        /// </summary>
        public static string Menu_FastFlags_Presets_FasterLoading_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FasterLoading.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Faster Loading.
        /// </summary>
        public static string Menu_FastFlags_Presets_FasterLoading_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FasterLoading.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox reduces your rendering quality depending on how your display is scaled in Windows..
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preserve rendering quality with display scaling.
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show values of specified flags during runtime. Each flag is comma separated..
        /// </summary>
        public static string Menu_FastFlags_Presets_FlagState_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FlagState.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag state.
        /// </summary>
        public static string Menu_FastFlags_Presets_FlagState_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FlagState.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default value is 1. Adjust if you use a custom font..
        /// </summary>
        public static string Menu_FastFlags_Presets_FontPadding_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FontPadding.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font size.
        /// </summary>
        public static string Menu_FastFlags_Presets_FontPadding_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FontPadding.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum number of worker threads Roblox can use for parallel tasks. Note: It’s recommended to set this to the number of logical processors your CPU has..
        /// </summary>
        public static string Menu_FastFlags_Presets_ForceLogicalProcessor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.ForceLogicalProcessor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Max Worker Threads.
        /// </summary>
        public static string Menu_FastFlags_Presets_ForceLogicalProcessor_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.ForceLogicalProcessor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the minimum threads kept available for async tasks in the Roblox task scheduler. Note: It is recommended to set the value as the number of cores your CPU has minus one..
        /// </summary>
        public static string Menu_FastFlags_Presets_ForceProcessor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.ForceProcessor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Minimum Async Thread Count”.
        /// </summary>
        public static string Menu_FastFlags_Presets_ForceProcessor_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.ForceProcessor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines how much extra time Roblox takes to prepare a single frame. Note: Values are set between 0-100.
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSBufferPercentage_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSBufferPercentage.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frame Creation Buffer Percentage.
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSBufferPercentage_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSBufferPercentage.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the value to 0 if you want to use Roblox’s native framerate cap..
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate limit.
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent the titlebar from showing when you move your cursor to the top of the screen in fullscreen mode..
        /// </summary>
        public static string Menu_FastFlags_Presets_FullscreenTitlebar_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FullscreenTitlebar.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Fullscreen Titlebar.
        /// </summary>
        public static string Menu_FastFlags_Presets_FullscreenTitlebar_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FullscreenTitlebar.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gray Avatars.
        /// </summary>
        public static string Menu_FastFlags_Presets_GrayAvatars_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.GrayAvatars.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the sky to gray in certain games. Note: This setting does not affect games that use custom skyboxes..
        /// </summary>
        public static string Menu_FastFlags_Presets_GraySky_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.GraySky.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gray Sky.
        /// </summary>
        public static string Menu_FastFlags_Presets_GraySky_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.GraySky.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggled with [keyboard shortcuts]({0}). Input the ID of a Roblox group you’re in..
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hiding GUIs.
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables the game pass purchase GUI in all games..
        /// </summary>
        public static string Menu_FastFlags_Presets_HidesPurchaseUI_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HidesPurchaseUI.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide Purchase UI.
        /// </summary>
        public static string Menu_FastFlags_Presets_HidesPurchaseUI_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HidesPurchaseUI.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chat translation.
        /// </summary>
        public static string Menu_FastFlags_Presets_IngameMenu_ChatTranslation_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.IngameMenu.ChatTranslation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate cap.
        /// </summary>
        public static string Menu_FastFlags_Presets_IngameMenu_Framerate_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.IngameMenu.Framerate.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language selector.
        /// </summary>
        public static string Menu_FastFlags_Presets_IngameMenu_LanguageSelector_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.IngameMenu.LanguageSelector.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feedback button.
        /// </summary>
        public static string Menu_FastFlags_Presets_IngameMenu_SoothsayerCheck_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.IngameMenu.SoothsayerCheck.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VR toggle.
        /// </summary>
        public static string Menu_FastFlags_Presets_IngameMenu_VRToggle_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.IngameMenu.VRToggle.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Improves the speeds of large read and write operations..
        /// </summary>
        public static string Menu_FastFlags_Presets_LargeReplicator_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LargeReplicator.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Large Replicator.
        /// </summary>
        public static string Menu_FastFlags_Presets_LargeReplicator_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LargeReplicator.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimizes light rendering conducted by the CPU and GPU by reducing unnecessary light calculations. Note: This setting may cause input lag or delay..
        /// </summary>
        public static string Menu_FastFlags_Presets_LightCulling_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightCulling.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Culling.
        /// </summary>
        public static string Menu_FastFlags_Presets_LightCulling_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightCulling.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen one will be force enabled in all games. [Beware, may cause lighting issues!]({0}).
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred lighting technology.
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reduces the quality of polygon meshes to potentially improve rendering performance or reduce memory usage..
        /// </summary>
        public static string Menu_FastFlags_Presets_LowPolyMeshes_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LowPolyMeshes.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low-Poly Meshes.
        /// </summary>
        public static string Menu_FastFlags_Presets_LowPolyMeshes_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LowPolyMeshes.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimizes memory usage for Low-End Systems..
        /// </summary>
        public static string Menu_FastFlags_Presets_MemoryProbing_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MemoryProbing.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory Probing.
        /// </summary>
        public static string Menu_FastFlags_Presets_MemoryProbing_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MemoryProbing.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Renders certain terrain and textures at a lower quality, potentially improving performance..
        /// </summary>
        public static string Menu_FastFlags_Presets_MinimalRendering_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MinimalRendering.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimal Rendering.
        /// </summary>
        public static string Menu_FastFlags_Presets_MinimalRendering_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MinimalRendering.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure fun and experimental features..
        /// </summary>
        public static string Menu_FastFlags_Presets_Misc_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Misc.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repeats letters in most GUI text to expand it. Higher values will increase the effect. Note: Some UI elements may be unaffected..
        /// </summary>
        public static string Menu_FastFlags_Presets_MoreCharacters_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MoreCharacters.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More Text Characters.
        /// </summary>
        public static string Menu_FastFlags_Presets_MoreCharacters_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MoreCharacters.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Higher MSAA levels reduce jagged edges but may impact performance..
        /// </summary>
        public static string Menu_FastFlags_Presets_MSAA_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MSAA.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-aliasing quality (MSAA).
        /// </summary>
        public static string Menu_FastFlags_Presets_MSAA_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MSAA.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the bytes of data that are transferred over your network. Note: Most people can handle MTU sizes from 576–1500..
        /// </summary>
        public static string Menu_FastFlags_Presets_MTU_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MTU.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MTU Connection Size.
        /// </summary>
        public static string Menu_FastFlags_Presets_MTU_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MTU.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures Roblox to use their new beta FPS and frametime system. Enabling this setting may potentially improve frame and input timing..
        /// </summary>
        public static string Menu_FastFlags_Presets_NewFPSSystem_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.NewFPSSystem.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Frame Performance System.
        /// </summary>
        public static string Menu_FastFlags_Presets_NewFPSSystem_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.NewFPSSystem.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gameplay will freeze until internet connection returns..
        /// </summary>
        public static string Menu_FastFlags_Presets_NoDisconnectMessage_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.NoDisconnectMessage.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Disconnect Message.
        /// </summary>
        public static string Menu_FastFlags_Presets_NoDisconnectMessage_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.NoDisconnectMessage.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables Roblox’s network data transfer limit. Note: Enabling this setting could lead to network overhead if the packets being sent are too large. Use at your own risk!.
        /// </summary>
        public static string Menu_FastFlags_Presets_NoPayloadLimit_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.NoPayloadLimit.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Payload Limit.
        /// </summary>
        public static string Menu_FastFlags_Presets_NoPayloadLimit_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.NoPayloadLimit.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locks the graphics quality to a selected amount. Note: With this setting enabled, the graphics slider in the Roblox menu will only affect the render distance in a game..
        /// </summary>
        public static string Menu_FastFlags_Presets_OverrideGraphicQuality_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.OverrideGraphicQuality.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override Graphics Quality Level.
        /// </summary>
        public static string Menu_FastFlags_Presets_OverrideGraphicQuality_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.OverrideGraphicQuality.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sends detailed ping information to the Roblox console..
        /// </summary>
        public static string Menu_FastFlags_Presets_PingBreakdown_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.PingBreakdown.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ping breakdown.
        /// </summary>
        public static string Menu_FastFlags_Presets_PingBreakdown_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.PingBreakdown.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the GPU that you want Roblox to use for rendering. Useful if your system has multiple GPUs. Note: This feature also enables DXT support..
        /// </summary>
        public static string Menu_FastFlags_Presets_PreferredGPU_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.PreferredGPU.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred graphics card.
        /// </summary>
        public static string Menu_FastFlags_Presets_PreferredGPU_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.PreferredGPU.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure settings that help protect your privacy..
        /// </summary>
        public static string Menu_FastFlags_Presets_Privacy_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Privacy.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy.
        /// </summary>
        public static string Menu_FastFlags_Presets_Privacy_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Privacy.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaces standard Roblox text with a spooky, demonic-style font..
        /// </summary>
        public static string Menu_FastFlags_Presets_Pseudolocalization_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Pseudolocalization.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pseudolocalization.
        /// </summary>
        public static string Menu_FastFlags_Presets_Pseudolocalization_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Pseudolocalization.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the skybox to include a variety of colors. Note: Note: Certain icons or images will appear distorted due to Texture Skipping. This setting is not guaranteed to work every time!.
        /// </summary>
        public static string Menu_FastFlags_Presets_RainbowSky_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RainbowSky.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rainbow Sky.
        /// </summary>
        public static string Menu_FastFlags_Presets_RainbowSky_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RainbowSky.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Potentially improve network performance by applying SignalR optimizations to RCore.
        /// </summary>
        public static string Menu_FastFlags_Presets_RCore_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RCore.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox Core.
        /// </summary>
        public static string Menu_FastFlags_Presets_RCore_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RCore.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies a red color to almost all text. Note: This setting does not work with custom fonts!.
        /// </summary>
        public static string Menu_FastFlags_Presets_RedFont_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RedFont.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red Font.
        /// </summary>
        public static string Menu_FastFlags_Presets_RedFont_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RedFont.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Potentially prevent extreme network spikes by smoothing out network output..
        /// </summary>
        public static string Menu_FastFlags_Presets_ReduceLagSpikes_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.ReduceLagSpikes.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network Output Stabilization.
        /// </summary>
        public static string Menu_FastFlags_Presets_ReduceLagSpikes_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.ReduceLagSpikes.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the frame rate Roblox should aim for. Recommended to set this value to your monitor’s refresh rate. Default value is 60..
        /// </summary>
        public static string Menu_FastFlags_Presets_RefreshRate_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RefreshRate.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Target Refresh Target.
        /// </summary>
        public static string Menu_FastFlags_Presets_RefreshRate_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RefreshRate.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes Roblox’s default grass textures. Note: This setting does not affect custom grass textures used by individual games..
        /// </summary>
        public static string Menu_FastFlags_Presets_RemoveGrass_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RemoveGrass.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Grass.
        /// </summary>
        public static string Menu_FastFlags_Presets_RemoveGrass_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RemoveGrass.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure experimental settings related to graphics and rendering..
        /// </summary>
        public static string Menu_FastFlags_Presets_Rendering_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Rendering.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the rendering API used for Roblox. Note: Press Alt + Enter to enter exclusive fullscreen when using Direct3D as the rendering API..
        /// </summary>
        public static string Menu_FastFlags_Presets_RenderingMode_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RenderingMode.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rendering mode.
        /// </summary>
        public static string Menu_FastFlags_Presets_RenderingMode_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RenderingMode.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets experimental skybox colors using a combination of fast flags. Note: These settings may be unstable, buggy, or incompatible with certain games.”.
        /// </summary>
        public static string Menu_FastFlags_Presets_SkyColor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.SkyColor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sky Colors.
        /// </summary>
        public static string Menu_FastFlags_Presets_SkyColor_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.SkyColor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smooths almost all in-game textures. Note: Some icons or images may appear distorted due to Texture Skipping. Compatibility or stability is not guaranteed on all systems, as this feature enables the Vulkan rendering API..
        /// </summary>
        public static string Menu_FastFlags_Presets_SmoothTextures_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.SmoothTextures.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smooth Textures.
        /// </summary>
        public static string Menu_FastFlags_Presets_SmoothTextures_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.SmoothTextures.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the initial graphics quality amount when joining a new game..
        /// </summary>
        public static string Menu_FastFlags_Presets_StartingGraphicLevel_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.StartingGraphicLevel.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting Graphics Level.
        /// </summary>
        public static string Menu_FastFlags_Presets_StartingGraphicLevel_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.StartingGraphicLevel.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevents idling in Roblox’s task scheduler, allowing it to run as many tasks as possible..
        /// </summary>
        public static string Menu_FastFlags_Presets_TaskSchedulerAvoidSleep_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.TaskSchedulerAvoidSleep.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid Task Scheduler Sleep.
        /// </summary>
        public static string Menu_FastFlags_Presets_TaskSchedulerAvoidSleep_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.TaskSchedulerAvoidSleep.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry.
        /// </summary>
        public static string Menu_FastFlags_Presets_Telemetry {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Telemetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: This setting disables a large majority of Roblox&apos;s telemetry, but not all..
        /// </summary>
        public static string Menu_FastFlags_Presets_Telemetry_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Telemetry.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Roblox telemetry.
        /// </summary>
        public static string Menu_FastFlags_Presets_Telemetry_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Telemetry.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: This setting blocks some data collection by Tencent and the Chinese government, but not all..
        /// </summary>
        public static string Menu_FastFlags_Presets_Tencent_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Tencent.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Tencent.
        /// </summary>
        public static string Menu_FastFlags_Presets_Tencent_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Tencent.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjust the texture quality for games. Note: This setting also affects GUI and UI..
        /// </summary>
        public static string Menu_FastFlags_Presets_TextureQuality_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.TextureQuality.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture quality.
        /// </summary>
        public static string Menu_FastFlags_Presets_TextureQuality_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.TextureQuality.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Textures and icon quality will look worse at higher values. Note: A performance boost may not be guaranteed when using this setting depending on your system..
        /// </summary>
        public static string Menu_FastFlags_Presets_TextureSkipping_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.TextureSkipping.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture Skipping.
        /// </summary>
        public static string Menu_FastFlags_Presets_TextureSkipping_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.TextureSkipping.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies a variety of random colors to text and UI elements that typically lack color. Note: This setting may cause certain games to look strange and discolored..
        /// </summary>
        public static string Menu_FastFlags_Presets_UnthemedInstances_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.UnthemedInstances.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rainbow UI/Textures.
        /// </summary>
        public static string Menu_FastFlags_Presets_UnthemedInstances_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.UnthemedInstances.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: This setting disables a large majority of Roblox&apos;s WebView2 telemetry, but not all..
        /// </summary>
        public static string Menu_FastFlags_Presets_WebView2Telemetry_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.WebView2Telemetry.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable WebView2 Telemetry.
        /// </summary>
        public static string Menu_FastFlags_Presets_WebView2Telemetry_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.WebView2Telemetry.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the skybox to white if a custom game skybox is not present..
        /// </summary>
        public static string Menu_FastFlags_Presets_WhiteSky_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.WhiteSky.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to White Sky.
        /// </summary>
        public static string Menu_FastFlags_Presets_WhiteSky_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.WhiteSky.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reduces the quality of particle effects for potentially better performance..
        /// </summary>
        public static string Menu_FastFlags_Presets_WorserParticles_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.WorserParticles.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low Quality Particles.
        /// </summary>
        public static string Menu_FastFlags_Presets_WorserParticles_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.WorserParticles.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset everything to default.
        /// </summary>
        public static string Menu_FastFlags_Reset_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Reset.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FastFlag Settings.
        /// </summary>
        public static string Menu_FastFlags_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to show &apos;Add with ID&apos; and &apos;Import ID JSON&apos; tabs in Add New dialog..
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_AddWithID_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.AddWithID.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add With ID.
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_AddWithID_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.AddWithID.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose the format for copying JSON..
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_CopyFormat_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.CopyFormat.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Format.
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_CopyFormat_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.CopyFormat.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle the Preset Column which shows toggleable fflags in fastflag setting.
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_PresetColumn_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.PresetColumn.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset Column.
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_PresetColumn_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.PresetColumn.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle the total flag count in the fastflag editor..
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_ToggleFlagCount_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.ToggleFlagCount.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag Count.
        /// </summary>
        public static string Menu_FastFlagsEditor_AdvancedSettings_ToggleFlagCount_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagsEditor.AdvancedSettings.ToggleFlagCount.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear FFlags.
        /// </summary>
        public static string Menu_FlagProfiles_ClearFlags {
            get {
                return ResourceManager.GetString("Menu.FlagProfiles.ClearFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and load fast flag profiles..
        /// </summary>
        public static string Menu_FlagProfiles_Description {
            get {
                return ResourceManager.GetString("Menu_FlagProfiles_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast Flag Profiles.
        /// </summary>
        public static string Menu_FlagProfiles_Title {
            get {
                return ResourceManager.GetString("Menu_FlagProfiles_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font files.
        /// </summary>
        public static string Menu_FontFiles {
            get {
                return ResourceManager.GetString("Menu.FontFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s anonymous and nothing evil, promise. For insight on what Froststrap collects and why, see Froststrap&apos;s [privacy policy]({0})..
        /// </summary>
        public static string Menu_Froststrap_Analytics_Description {
            get {
                return ResourceManager.GetString("Menu.Froststrap.Analytics.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable sending of analytics to Froststrap.
        /// </summary>
        public static string Menu_Froststrap_Analytics_Title {
            get {
                return ResourceManager.GetString("Menu.Froststrap.Analytics.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure options related to Froststrap&apos;s behaviour itself..
        /// </summary>
        public static string Menu_Froststrap_Description {
            get {
                return ResourceManager.GetString("Menu.Froststrap.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gather information that can be uploaded online to troubleshoot a problem you&apos;re having..
        /// </summary>
        public static string Menu_Froststrap_ExportData_Description {
            get {
                return ResourceManager.GetString("Menu.Froststrap.ExportData.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap configuration.
        /// </summary>
        public static string Menu_Froststrap_ExportData_ExportConfig {
            get {
                return ResourceManager.GetString("Menu.Froststrap.ExportData.ExportConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Froststrap logs.
        /// </summary>
        public static string Menu_Froststrap_ExportData_ExportLogs {
            get {
                return ResourceManager.GetString("Menu.Froststrap.ExportData.ExportLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export diagnostic data.
        /// </summary>
        public static string Menu_Froststrap_ExportData_Title {
            get {
                return ResourceManager.GetString("Menu.Froststrap.ExportData.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Advanced FastFlag Editor Settings](https://github.com/Meddsam/Froststrap/wiki/Features#advanced-fastflag-editor-settings).
        /// </summary>
        public static string Menu_Help_AdvancedFFlagEditorSettings {
            get {
                return ResourceManager.GetString("Menu.Help.AdvancedFFlagEditorSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Better Suggestion Box](https://github.com/Meddsam/Froststrap/wiki/Features#better-suggestion-box).
        /// </summary>
        public static string Menu_Help_BetterSuggestionBox {
            get {
                return ResourceManager.GetString("Menu.Help.BetterSuggestionBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [BGRA Support](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#bgra-support).
        /// </summary>
        public static string Menu_Help_BGRASupport {
            get {
                return ResourceManager.GetString("Menu.Help.BGRASupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Black Sky When Camera Turning](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#skybox-turns-black-when-moving-your-camera).
        /// </summary>
        public static string Menu_Help_BlackSky {
            get {
                return ResourceManager.GetString("Menu.Help.BlackSky", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Black Textures](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#black-textures).
        /// </summary>
        public static string Menu_Help_BlackTextures {
            get {
                return ResourceManager.GetString("Menu.Help.BlackTextures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Blurry Icons/Textures](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#blurry-iconstextures).
        /// </summary>
        public static string Menu_Help_BlurryIconsTextures {
            get {
                return ResourceManager.GetString("Menu.Help.BlurryIconsTextures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper Issues.
        /// </summary>
        public static string Menu_Help_BootstrapperIssues {
            get {
                return ResourceManager.GetString("Menu.Help.BootstrapperIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Bugged Meshes](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#weird-meshes).
        /// </summary>
        public static string Menu_Help_BuggedMeshes {
            get {
                return ResourceManager.GetString("Menu.Help.BuggedMeshes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Built-In Lists](https://github.com/Meddsam/Froststrap/wiki/Features#built-in-lists).
        /// </summary>
        public static string Menu_Help_BuiltInLists {
            get {
                return ResourceManager.GetString("Menu.Help.BuiltInLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Bypass Vulkan](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#bypass-vulkan-requirement).
        /// </summary>
        public static string Menu_Help_BypassVulkan {
            get {
                return ResourceManager.GetString("Menu.Help.BypassVulkan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Froststrap Cleaner](https://github.com/Meddsam/Froststrap/wiki/Features#cleaner).
        /// </summary>
        public static string Menu_Help_Cleaner {
            get {
                return ResourceManager.GetString("Menu.Help.Cleaner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Connectivity Issues](https://github.com/Meddsam/Froststrap/wiki/Bootstrapper-Common-Issues#connectivity-issue).
        /// </summary>
        public static string Menu_Help_ConnectivityIssue {
            get {
                return ResourceManager.GetString("Menu.Help.ConnectivityIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Crash On Fast Camera Turn](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#game-crashing-when-moving-camera-fast).
        /// </summary>
        public static string Menu_Help_Crashonfastcameraturn {
            get {
                return ResourceManager.GetString("Menu.Help.Crashonfastcameraturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Custom Launchers](https://github.com/Meddsam/Froststrap/wiki/Features#custom-launchers).
        /// </summary>
        public static string Menu_Help_CustomLaunchers {
            get {
                return ResourceManager.GetString("Menu.Help.CustomLaunchers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Custom Mods Page](https://github.com/Meddsam/Froststrap/wiki/Features#custom-mods-page).
        /// </summary>
        public static string Menu_Help_CustomModsPage {
            get {
                return ResourceManager.GetString("Menu.Help.CustomModsPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will provide you with information about fixes and other details (it will redirect you to the wiki page)..
        /// </summary>
        public static string Menu_Help_Description {
            get {
                return ResourceManager.GetString("Menu.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Disabling Roblox’s Fullscreen Titlebar](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#disable-full-screen-title-bar).
        /// </summary>
        public static string Menu_Help_DisableFullScreenTitleBar {
            get {
                return ResourceManager.GetString("Menu.Help.DisableFullScreenTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Disable Hardware Acceleration](https://github.com/Meddsam/Froststrap/wiki/Features#disable-hardware-acceleration).
        /// </summary>
        public static string Menu_Help_DisableHardwareAcceleration {
            get {
                return ResourceManager.GetString("Menu.Help.DisableHardwareAcceleration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Discord Rich Presence](https://github.com/bloxstraplabs/bloxstrap/wiki/What-is-activity-tracking%3F#discord-rich-presence).
        /// </summary>
        public static string Menu_Help_DiscordRichPresence {
            get {
                return ResourceManager.GetString("Menu.Help.DiscordRichPresence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Discord Rich Presence Broken](https://github.com/bloxstraplabs/bloxstrap/wiki/Discord-Rich-Presence-does-not-work).
        /// </summary>
        public static string Menu_Help_DiscordRichPresenceNotWorking {
            get {
                return ResourceManager.GetString("Menu.Help.DiscordRichPresenceNotWorking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        public static string Menu_Help_Features {
            get {
                return ResourceManager.GetString("Menu.Help.Features", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FFlag Guide.
        /// </summary>
        public static string Menu_Help_FFlagGuide {
            get {
                return ResourceManager.GetString("Menu.Help.FFlagGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common FFlag Issues.
        /// </summary>
        public static string Menu_Help_FFlagIssues {
            get {
                return ResourceManager.GetString("Menu.Help.FFlagIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [FPS Not Fully Uncapped](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#capped-fps-even-when-you-have-it-uncapped).
        /// </summary>
        public static string Menu_Help_FPSCappedWhenUncapped {
            get {
                return ResourceManager.GetString("Menu.Help.FPSCappedWhenUncapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Frame Stutters](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#frame-stutters).
        /// </summary>
        public static string Menu_Help_FrameStutters {
            get {
                return ResourceManager.GetString("Menu.Help.FrameStutters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Game History](https://github.com/bloxstraplabs/bloxstrap/wiki/What-is-activity-tracking%3F#game-history-viewing).
        /// </summary>
        public static string Menu_Help_GameHistory {
            get {
                return ResourceManager.GetString("Menu.Help.GameHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Gray Avatars](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#gray-avatars).
        /// </summary>
        public static string Menu_Help_GrayAvatars {
            get {
                return ResourceManager.GetString("Menu.Help.GrayAvatars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Gray Sky](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#gray-sky).
        /// </summary>
        public static string Menu_Help_GraySky {
            get {
                return ResourceManager.GetString("Menu.Help.GraySky", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Laggy Animations](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#laggy-animations).
        /// </summary>
        public static string Menu_Help_LaggyAnimation {
            get {
                return ResourceManager.GetString("Menu.Help.LaggyAnimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Large Replicator](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#large-replicator).
        /// </summary>
        public static string Menu_Help_LargeReplicator {
            get {
                return ResourceManager.GetString("Menu.Help.LargeReplicator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Light Culling](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#light-culling).
        /// </summary>
        public static string Menu_Help_LightCulling {
            get {
                return ResourceManager.GetString("Menu.Help.LightCulling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Lighting Problems](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#lighting-problems).
        /// </summary>
        public static string Menu_Help_LightingProblems {
            get {
                return ResourceManager.GetString("Menu.Help.LightingProblems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Loading Issues](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#loadding-issue).
        /// </summary>
        public static string Menu_Help_LoaddingIssues {
            get {
                return ResourceManager.GetString("Menu.Help.LoaddingIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Maquette Frames Before Shown](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#maquette-frames-before-shown).
        /// </summary>
        public static string Menu_Help_MaquetteFramesBeforeShown {
            get {
                return ResourceManager.GetString("Menu.Help.MaquetteFramesBeforeShown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Message Logs and Player Logs](https://github.com/Meddsam/Froststrap/wiki/Features#message-logs-and-player-logs).
        /// </summary>
        public static string Menu_Help_MessageLogsAndPlayerLogs {
            get {
                return ResourceManager.GetString("Menu.Help.MessageLogsAndPlayerLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Multi-Instance Launching](https://github.com/Meddsam/Froststrap/wiki/Features#multi-instance-launching).
        /// </summary>
        public static string Menu_Help_MultiInstanceLaunching {
            get {
                return ResourceManager.GetString("Menu.Help.MultiInstanceLaunching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Override Graphic Quality](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#override-graphic-quality).
        /// </summary>
        public static string Menu_Help_OverrideGraphicQuality {
            get {
                return ResourceManager.GetString("Menu.Help.OverrideGraphicQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Payload Limit](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#payload-limit).
        /// </summary>
        public static string Menu_Help_PayloadLimit {
            get {
                return ResourceManager.GetString("Menu.Help.PayloadLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Preset Flag Viewer](https://github.com/Meddsam/Froststrap/wiki/Features#preset-flag-viewer).
        /// </summary>
        public static string Menu_Help_PresetFlagViewer {
            get {
                return ResourceManager.GetString("Menu.Help.PresetFlagViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Quality Level Not Changing](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#quality-levels-not-changing).
        /// </summary>
        public static string Menu_Help_QualityLevelNotChanging {
            get {
                return ResourceManager.GetString("Menu.Help.QualityLevelNotChanging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Rainbow Colored UI/Textures](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#rainbow-colored-uigraphics).
        /// </summary>
        public static string Menu_Help_RainbowUiTextures {
            get {
                return ResourceManager.GetString("Menu.Help.RainbowUiTextures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [RCore](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#rcore).
        /// </summary>
        public static string Menu_Help_RCore {
            get {
                return ResourceManager.GetString("Menu.Help.RCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Recommended Buffering](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#recommended-buffering).
        /// </summary>
        public static string Menu_Help_RecommendedBuffering {
            get {
                return ResourceManager.GetString("Menu.Help.RecommendedBuffering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Reduce Lag Spikes](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#reduce-lag-spikes).
        /// </summary>
        public static string Menu_Help_ReduceLagSpikes {
            get {
                return ResourceManager.GetString("Menu.Help.ReduceLagSpikes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Rendering Modes](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#rendering-mode).
        /// </summary>
        public static string Menu_Help_RenderingModes {
            get {
                return ResourceManager.GetString("Menu.Help.RenderingModes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Roblox Crashing](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#crashing-in-roblox-after-the-v671-update).
        /// </summary>
        public static string Menu_Help_RobloxCrashing {
            get {
                return ResourceManager.GetString("Menu.Help.RobloxCrashing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Roblox Dosen&apos;t Launch](https://github.com/Meddsam/Froststrap/wiki/Bootstrapper-Common-Issues#roblox-wont-launch).
        /// </summary>
        public static string Menu_Help_RobloxWontLaunch {
            get {
                return ResourceManager.GetString("Menu.Help.RobloxWontLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Server Information](https://github.com/bloxstraplabs/bloxstrap/wiki/What-is-activity-tracking%3F#server-information-viewing).
        /// </summary>
        public static string Menu_Help_ServerInformation {
            get {
                return ResourceManager.GetString("Menu.Help.ServerInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Failed Custom Bootstrapper Setup](https://github.com/Meddsam/Froststrap/wiki/Bootstrapper-Common-Issues#custom-bootstrapper-setup-failed).
        /// </summary>
        public static string Menu_Help_SetupFailed {
            get {
                return ResourceManager.GetString("Menu.Help.SetupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Telemetry](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#telemetry).
        /// </summary>
        public static string Menu_Help_Telemetry {
            get {
                return ResourceManager.GetString("Menu.Help.Telemetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Texture Skipping](https://github.com/Meddsam/Froststrap/wiki/A-guide-to-FastFlags#texture-skipping).
        /// </summary>
        public static string Menu_Help_TextureSkipping {
            get {
                return ResourceManager.GetString("Menu.Help.TextureSkipping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string Menu_Help_Title {
            get {
                return ResourceManager.GetString("Menu.Help.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [White Sky / White Screen](https://github.com/Meddsam/Froststrap/wiki/Common-FFlag-Issues#everything-on-the-screen-is-white-or-the-sky-is-white).
        /// </summary>
        public static string Menu_Help_WhiteSkyAndWhiteScreen {
            get {
                return ResourceManager.GetString("Menu.Help.WhiteSkyAndWhiteScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon files.
        /// </summary>
        public static string Menu_IconFiles {
            get {
                return ResourceManager.GetString("Menu.IconFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap cannot be installed here. Please choose a different location, or resort to using the default location by clicking the reset button..
        /// </summary>
        public static string Menu_InstallLocation_CantInstall {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.CantInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you&apos;ve chosen to install Froststrap to already exists and is NOT empty. It is strongly recommended for Froststrap to be installed to its own independent folder.
        ///
        ///Changing to the following location is suggested:
        ///{0}
        ///
        ///Would you like to change to the suggested location?
        ///Selecting &apos;No&apos; will ignore this warning and continue installation..
        /// </summary>
        public static string Menu_InstallLocation_NotEmpty {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must set an install location.
        /// </summary>
        public static string Menu_InstallLocation_NotSet {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap does not have write access to the install location you&apos;ve selected. Please choose another location..
        /// </summary>
        public static string Menu_InstallLocation_NoWritePerms {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NoWritePerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activity Tracking.
        /// </summary>
        public static string Menu_Integrations_ActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.ActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows for anybody to join the game you&apos;re currently in through your Discord profile..
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow activity joining.
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles certain built-in Roblox features..
        /// </summary>
        public static string Menu_Integrations_BlockCardExpander_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.BlockCardExpander.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Roblox Features.
        /// </summary>
        public static string Menu_Integrations_BlockCardExpander_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.BlockCardExpander.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables the Roblox screenshot feature. Note: When this feature is enabled, The hotkey combo will no longer work..
        /// </summary>
        public static string Menu_Integrations_BlockScreenShots_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.BlockScreenShots.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Roblox Screenshots.
        /// </summary>
        public static string Menu_Integrations_BlockScreenShots_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.BlockScreenShots.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables the Roblox recording feature. Note: When this feature is enabled, The hotkey combo will no longer work..
        /// </summary>
        public static string Menu_Integrations_BlockVideoRecording_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.BlockVideoRecording.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Roblox Recording.
        /// </summary>
        public static string Menu_Integrations_BlockVideoRecording_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.BlockVideoRecording.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Location.
        /// </summary>
        public static string Menu_Integrations_Custom_AppLocation {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AppLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto close when Roblox closes.
        /// </summary>
        public static string Menu_Integrations_Custom_AutoClose {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AutoClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto close when the game closes.
        /// </summary>
        public static string Menu_Integrations_Custom_AutoCloseOnGame {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AutoCloseOnGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here, you can have other programs launch with Roblox automatically..
        /// </summary>
        public static string Menu_Integrations_Custom_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game ID.
        /// </summary>
        public static string Menu_Integrations_Custom_GameID {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.GameID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Arguments.
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is running!.
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs_Placeholder {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs.Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Integration.
        /// </summary>
        public static string Menu_Integrations_Custom_NewIntegration {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NewIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No integration selected, please select or add a new one.
        /// </summary>
        public static string Menu_Integrations_Custom_NoneSelected {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NoneSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run on a specific game.
        /// </summary>
        public static string Menu_Integrations_Custom_SpecifyGame {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.SpecifyGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Integrations.
        /// </summary>
        public static string Menu_Integrations_Custom_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure additional functionality to go alongside Roblox..
        /// </summary>
        public static string Menu_Integrations_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox will fully close when you leave a game instead of going back to the app. [Will break some things!]({0}).
        /// </summary>
        public static string Menu_Integrations_DesktopApp_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.DesktopApp.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t exit to desktop app.
        /// </summary>
        public static string Menu_Integrations_DesktopApp_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.DesktopApp.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows Froststrap to detect what Roblox game you&apos;re playing. Certain features may require this..
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable activity tracking.
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays player joins/leaves and messages. Only works with [text chat service](https://devforum.roblox.com/t/new-in-experience-text-chat-system-public-release/1848837)..
        /// </summary>
        public static string Menu_Integrations_PlayerMessageLogs_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.PlayerMessageLogs.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs Menu.
        /// </summary>
        public static string Menu_Integrations_PlayerMessageLogs_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.PlayerMessageLogs.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When in-game, you&apos;ll be able to see where your server is located via [ipinfo.io]({0})..
        /// </summary>
        public static string Menu_Integrations_QueryServerLocation_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.QueryServerLocation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query server location.
        /// </summary>
        public static string Menu_Integrations_QueryServerLocation_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.QueryServerLocation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature requires activity tracking to be enabled and the Discord desktop app to be installed and running. [Find out more]({0})..
        /// </summary>
        public static string Menu_Integrations_RequiresActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.RequiresActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the Roblox account you&apos;re playing with on your Discord profile..
        /// </summary>
        public static string Menu_Integrations_ShowAccountOnProfile_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowAccountOnProfile.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Roblox account.
        /// </summary>
        public static string Menu_Integrations_ShowAccountOnProfile_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowAccountOnProfile.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Roblox game you&apos;re playing will be shown on your Discord profile. [Not working?]({0}).
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show game activity.
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integrations.
        /// </summary>
        public static string Menu_Integrations_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load.
        /// </summary>
        public static string Menu_Load {
            get {
                return ResourceManager.GetString("Menu.Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage and apply file mods to the Roblox Game Client..
        /// </summary>
        public static string Menu_Mods_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See info about managing and creating mods..
        /// </summary>
        public static string Menu_Mods_Help_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure application parameters such as DPI scaling behaviour and [fullscreen optimizations]({0})..
        /// </summary>
        public static string Menu_Mods_Misc_CompatibilitySettings_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CompatibilitySettings.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage compatibility settings.
        /// </summary>
        public static string Menu_Mods_Misc_CompatibilitySettings_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CompatibilitySettings.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Cursor....
        /// </summary>
        public static string Menu_Mods_Misc_CustomCursor_Choose {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomCursor.Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use your own mouse cursors in Roblox.
        /// </summary>
        public static string Menu_Mods_Misc_CustomCursor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomCursor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Custom Cursor.
        /// </summary>
        public static string Menu_Mods_Misc_CustomCursor_Remove {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomCursor.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Custom Cursor.
        /// </summary>
        public static string Menu_Mods_Misc_CustomCursor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomCursor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose font....
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Choose {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font size can be adjusted in the FastFlag Settings tab..
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file you have chosen does not appear to be a valid font file..
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Invalid {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove applied font.
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Remove {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Custom In-Game Font.
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage custom Roblox mods here..
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Mods Folder.
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which type of emoji should Roblox use..
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The emoji mod can not be applied at this time..
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Error {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred emoji type.
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose between using two classic Roblox cursor styles..
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse cursor.
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bring back the old avatar editor background used in the Roblox app prior to 2020..
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use old avatar editor background.
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to roughly bring back the character sounds used prior to 2014..
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulate old character sounds.
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bring back the classic &apos;oof&apos; death sound..
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use old death sound.
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        public static string Menu_Mods_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click for more information on this option..
        /// </summary>
        public static string Menu_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Menu_Save {
            get {
                return ResourceManager.GetString("Menu.Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and Launch.
        /// </summary>
        public static string Menu_SaveAndLaunch {
            get {
                return ResourceManager.GetString("Menu.SaveAndLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes will take effect the next time you launch Roblox..
        /// </summary>
        public static string Menu_SettingsSaved_Message {
            get {
                return ResourceManager.GetString("Menu.SettingsSaved.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings saved!.
        /// </summary>
        public static string Menu_SettingsSaved_Title {
            get {
                return ResourceManager.GetString("Menu.SettingsSaved.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how Froststrap can be readily launched..
        /// </summary>
        public static string Menu_Shortcuts_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to use Froststrap&apos;s range of Roblox icons for your shortcuts. [See how.]({0}).
        /// </summary>
        public static string Menu_Shortcuts_ExtractIcons_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.ExtractIcons.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract Roblox icons to folder.
        /// </summary>
        public static string Menu_Shortcuts_ExtractIcons_Title {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.ExtractIcons.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create shortcuts for quick access to specific functions. These will all be placed on the Desktop..
        /// </summary>
        public static string Menu_Shortcuts_Function_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.Function.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function.
        /// </summary>
        public static string Menu_Shortcuts_Function_Title {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.Function.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the shortcuts that bring up the multi-choice launch Menu..
        /// </summary>
        public static string Menu_Shortcuts_General_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.General.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string Menu_Shortcuts_General_Title {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.General.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Mode.
        /// </summary>
        public static string Menu_TestMode {
            get {
                return ResourceManager.GetString("Menu.TestMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Mode makes it easier to iteratively test how your settings affect Roblox. 
        ///
        ///While enabled, it will automatically launch Roblox after closing Settings, and reopen Settings after closing Roblox, in a cycle until you disable it.
        ///
        ///Would you like to enable Test Mode?.
        /// </summary>
        public static string Menu_TestMode_Prompt {
            get {
                return ResourceManager.GetString("Menu.TestMode.Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Froststrap Settings.
        /// </summary>
        public static string Menu_Title {
            get {
                return ResourceManager.GetString("Menu.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have unsaved changes. Are you sure you want to close without saving?.
        /// </summary>
        public static string Menu_UnsavedChanges {
            get {
                return ResourceManager.GetString("Menu.UnsavedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icons.
        /// </summary>
        public static string Paths_Icons {
            get {
                return ResourceManager.GetString("Paths.Icons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string UI_Elements_Settings_Pages_FastFlagsPage_SearchMode_All {
            get {
                return ResourceManager.GetString("UI.Elements.Settings.Pages.FastFlagsPage+SearchMode.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string UI_Elements_Settings_Pages_FastFlagsPage_SearchMode_Description {
            get {
                return ResourceManager.GetString("UI.Elements.Settings.Pages.FastFlagsPage+SearchMode.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        public static string UI_Elements_Settings_Pages_FastFlagsPage_SearchMode_Title {
            get {
                return ResourceManager.GetString("UI.Elements.Settings.Pages.FastFlagsPage+SearchMode.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to They&apos;ll be kept where Froststrap was installed, and will automatically be restored on a reinstall..
        /// </summary>
        public static string Uninstaller_KeepData_Description {
            get {
                return ResourceManager.GetString("Uninstaller.KeepData.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep my settings and mods.
        /// </summary>
        public static string Uninstaller_KeepData_Label {
            get {
                return ResourceManager.GetString("Uninstaller.KeepData.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling will remove Froststrap from your system, and automatically reconfigure the default Roblox launcher if it&apos;s still installed.
        ///
        ///If you&apos;re uninstalling or reinstalling because you are having issues with Roblox, read [this help page]({0}) first.
        ///
        ///The uninstall process may not be able to fully clean up itself, so you may need to manually clean up leftover files where Froststrap was installed.
        ///
        ///Froststrap was installed at &quot;{1}&quot;..
        /// </summary>
        public static string Uninstaller_Text {
            get {
                return ResourceManager.GetString("Uninstaller.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Froststrap.
        /// </summary>
        public static string Uninstaller_Title {
            get {
                return ResourceManager.GetString("Uninstaller.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string Uninstaller_Uninstall {
            get {
                return ResourceManager.GetString("Uninstaller.Uninstall", resourceCulture);
            }
        }
    }
}
